#!/usr/bin/env python

import sys, os, subprocess, time


def cloudtool(*args):
    c = [ "%s/scripts/cloud/cloudtool" % os.environ['RIFT_ROOT'] ] + list(args) 
    print "### " + " ".join(c)
    return subprocess.check_output(c)
    
def get_vm_count():
    tries=0
    out=None
    while tries < 5 and out is None:
        tries += 1
        try:
            out = cloudtool("vm", "list" )
        except:
            print "### error from vm list...retrying in one second"
            time.sleep(1)
    out = out.strip()
    if len(out) == 0:
        ct = 0
    else:
        ct = len(out.split('\n'))
    
    print "### found %d VMs" % ( ct ) 
    return ct

    
def doit():
    old = cloudtool("genscript")
    for line in old.strip().split('\n'):
        print line
        subprocess.check_output(line, shell=True)
    
    


###############################
### MAIN 
###############################

if len(sys.argv) == 2 and sys.argv[1] == "--GO":
    # we are on the grunt...just do it
    doit()
    sys.exit(0)
    
if len(sys.argv) == 1:
    import ndl
    testbed = ndl.Testbed()
    controllers = testbed.get_controllers()
else:
    controllers = sys.argv[1:]

print "### updating VMs on %s" % ( ",".join(controllers) )

for c in controllers:
    cmd = ["ssh", c, "/usr/rift/bin/setview",  os.environ['RIFT_ROOT'], "./scripts/cloud/recreate_vms", "--GO" ]
    print "### " + " ".join(cmd)
    subprocess.check_output(cmd)
    
    


    
