/////////////// xyz.h
#include "rw_cf_type_validate.h"
typedef struct xyz {
  CFRuntimeBase _base; // THIS IS NEEDED IN ORDER TO CF-ize THE TYPE
  int abc;
  char *str;
} *xyz_t;

RW_CF_TYPE_EXTERN(xyz_t);  // EXTERN DECLARATION OF CF-ized TYPE

///////////// xyz.c
#include "rw_cf_type_validate.h"

// THE DEFINE an REGISTER CF-izes the type; so that VALIDATE can be called

RW_CF_DEFINE_TYPE("XYZ is the data-structure for Blah Blah..", xyz_t);

void xyz_init_routine(void)
{
...
  RW_CF_REGISTER_TYPE(xyz_t); // THIS REGISTERS THE TYPE W/ CoreFoundations
...
}


void xyz_some_routine(void)
{
  xyz_t *xyz;
...
  xyz = RW_CF_TYPE_MALLOC0(sizeof(*xyz), xyz_t); // FOR ALLOCATING THE CF-ized TYPE
...
}


void xyz_some_other_routine(xyz_t *xyz)
{
  RW_CF_TYPE_VALIDATE(xyz, xyz_t);   // THIS VALIDATES THE DATA-TYPE
}

void xyz_cleanup_routine(xyz_t *xyz)
{
...
  RW_CF_FREE_TYPE(xyz, xyz_t); // FOR FREEING THE CF-ized TYPE
...
}
