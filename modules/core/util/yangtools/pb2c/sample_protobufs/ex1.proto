import "descriptor.proto";
import "rwpbapi.proto";

option cc_generic_services = true;

message ipsec_session_stateTypehack
{
	optional uint64 callid = 1 [default = 1];
	optional uint64 policy_objid = 2 [default = 2];
}


message msg1
{
      required int32  a=1; 
      optional int32  b=2;
  /*      optional string c=3 [default = "ccc"];
      optional bytes  d=4;
      repeated bytes  e=5;
      required int32  isThisAproblem = 6;
      required int32  ISTHISANISSUE = 7;
FF      required int32  how_about_this = 8;*/
}


message msg2
{
      required int32 a=1 [default = 99];
      optional int32 b=2 [default = 999];
      repeated int32 c=3;
      repeated Tenum d=4;
      repeated string e=5;
      optional string f=6 [ default = "ffff"];
}

enum Tenum {
   UNDEFINED = 0;
   EN1 = 1;
   EN2 = 2;
}

message msg3
{
  optional double    a = 1 [default = 1.0];
  optional float     b = 2 [default = 2.0];
  optional int32     c = 3 [default = -3];
  optional int64     d = 4 [default = -4];
  optional uint32    e = 5 [default = 5];
  optional uint64    f = 6 [default = 6];
  optional sint32    g = 7 [default = -7];
  optional sint64    h = 8 [default = -8];
  optional fixed32   i = 9 [default = 9];
  optional fixed64   j = 10 [default = 10];
  optional sfixed32  k = 11 [default = -11];
  optional sfixed64  l = 12 [default = -12];
  optional bool      m = 13 [default = true];
  optional string    n = 14 [default = "foo"];
  optional bytes     o = 15 [default = ""];
  optional Tenum     p = 16 [default = EN1]; 
  repeated bytes     q = 17;
  repeated uint32    r = 18;
  repeated uint64    s = 19;
  repeated string    t = 20;
}

message msg4
{
  optional int32 i1 = 1 [default = 11];
  message msg4_1 {
   optional int32 i2 = 2 [default =99];
  }
 required int32 i3 = 3 [default = 999];
 optional msg3 foo = 4;
 required msg4_1 moo = 5;
 repeated msg2 doo = 6;
 required msg2 zoo = 7;
}

/*
message _m_sg_5_top_
{
 required int32 i1 = 1 [default = 9999];
  message m__s__g___4_1_ {
   optional int32 i2 = 2 [default =99];
  }
  repeated msg1 i3 = 3;
}
*/
message m5
{
 required int32 i1 = 1 [default = 9999];
  message m51 {
   optional int32 i2 = 2 [default =99];
  }
  repeated msg1 i3 = 3;
}


message m6
{
  /* Whole thing should be NOT inline */
  //  option (rr_msgopts) = { flat:false };
  required int32 i1 = 1;

  optional string s1 = 2;
  required string s1_req = 9;
  repeated string s1_rep = 10;

  required uint32 r_req = 8;
  optional uint32 r_opt = 7;
  repeated uint32 r = 3;

  required msg1 m1_req = 5;
  optional msg1 m1 = 4;
  repeated msg1 m1_rep = 6;
}

message m6noopt
{
  required int32 i1 = 1;
  optional string s1 = 2;
  repeated uint32    r = 3;
  optional msg1 m1 = 4;
}

