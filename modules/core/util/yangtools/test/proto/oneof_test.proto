
/*
 * 
 * (c) Copyright RIFT.io, 2013-2016, All Rights Reserved
 *
 */


/**
 * @file oneof_test.proto
 * @author Sujithra Periasamy
 * @date 2014/09/17
 * @brief Test protobuf oneof with rift extensions.
 */

import "descriptor.proto";
import "rwpbapi.proto";
option cc_generic_services = true;

package oneof_test;


enum TestEnumSmall {
  VALUE = 0;
  OTHER_VALUE = 1;
}

enum TestEnum {
  TVALUE0 = 0;
  TVALUE1 = 1;
  TVALUE127 = 127;
  TVALUE128 = 128;
  TVALUE16383 = 16383;
  TVALUE16384 = 16384;
  TVALUE2097151 = 2097151;
  TVALUE2097152 = 2097152;
  TVALUE268435455 = 268435455;
  TVALUE268435456 = 268435456;
}


message SubMess {
  required int32 test = 4;

  optional int32 val1 = 6;
  optional int32 val2 = 7;
  repeated int32 rep = 8;
  message SubSubMess {
    optional int32 val1 = 1 [default = 100];
    repeated int32 rep = 4;
    optional bytes bytes1 = 2 [default = "a \0 char"];
    optional string str1 = 3 [default = "hello world\n"];
  }
  optional SubSubMess sub1 = 9;
  optional SubSubMess sub2 = 10;
};

message TestMessOneof {
  oneof test_oneof {
    int32 test_int32 = 1;
    sint32 test_sint32 = 2;
    sfixed32 test_sfixed32 = 3;
    int64 test_int64 = 4;
    sint64 test_sint64 = 5;
    sfixed64 test_sfixed64 = 6;
    uint32 test_uint32 = 7;
    fixed32 test_fixed32 = 8;
    uint64 test_uint64 = 9;
    fixed64 test_fixed64 = 10;
    float test_float = 11;
    double test_double = 12;
    bool test_boolean = 13;
    TestEnumSmall test_enum_small = 14;
    TestEnum test_enum = 15;
    string test_string = 16;
    bytes test_bytes = 17;
    SubMess test_message = 18;
  }
  optional int32 opt_int = 19;
}

message TestOneofInline {

  oneof oneof_inline {
    string test_string_in = 1 [ (rw_fopts) = { inline:true string_max:64 } ];
    SubMess test_message_in = 2 [ (rw_fopts) = { inline:true } ];
    bytes test_bytes = 3 [ (rw_fopts) = { inline:true string_max:512 } ];
  }

  repeated string list = 4 [ (rw_fopts) = { inline:true string_max:64 inline_max:10 } ];
}
