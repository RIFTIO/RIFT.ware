#!/usr/bin/env python3

# 
# (c) Copyright RIFT.io, 2013-2016, All Rights Reserved
#
# Author(s): Max Beckett
# Creation Date: 7/10/2015
# 

import argparse
import asyncio
import signal
import sys
import lxml
import ncclient.asyncio_manager
import tornado

from gi.repository import RwYang
from rift.restconf import ConfdRestTranslator
from rift.restconf import HttpHandler
from rift.restconf import WebSocketHandler
from rift.restconf import XmlToJsonTranslator

from rift.restconf import load_schema_root

def main():
    
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--restconf-port",
        required=False,
        default="8008",
        help="port number to listen on")
    parser.add_argument(
        "--netconf-ip",
        required=True,
        help="ip address of NETCONF server")
    parser.add_argument(
        "--netconf-port",
        required=False,
        default="2022",
        help="port number of NETCONF server")
    arguments = parser.parse_args()

    asyncio_loop = asyncio.get_event_loop()

    nc_mgr = ncclient.manager.connect(
        host=arguments.netconf_ip,
        port=arguments.netconf_port,
        username='admin',
        password='admin', 
        allow_agent=False,
        look_for_keys=False,
        hostkey_verify=False
    )


    
    '''
<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
<dyn-schema-test-a xmlns="http://riftio.com/ns/riftware-1.0/rw-dyn-schema-test-a">
<hello-world-a>
test
</hello-world-a>
</dyn-schema-test-a>
</config>
    '''
    '''<dyn-schema-test-a xmlns="http://riftio.com/ns/riftware-1.0/rw-dyn-schema-test-a"/>
    '''
    xml =''' 
<cloud xmlns="http://riftio.com/ns/riftware-1.0/rw-mc" />
    '''
    '''
<cloud xmlns="http://riftio.com/ns/riftware-1.0/rw-mc">
  <account xmlns="http://riftio.com/ns/riftware-1.0/rw-mc">
    <cloudsim xmlns="http://riftio.com/ns/riftware-1.0/rw-mc" />
  </account>
</cloud>
    '''
    '''
<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
  <rw-manifest:manifest xmlns:rw-manifest="http://riftio.com/ns/riftware-1.0/rw-manifest">
    <rw-manifest:inventory>
    <rw-manifest:component xmlns:rw-manifest="http://riftio.com/ns/riftware-1.0/rw-manifest" xc:operation="create">
      <rw-manifest:component-name>pytoytasklet</rw-manifest:component-name>      
      <rw-manifest:component-type>RWTASKLET</rw-manifest:component-type>      
      <rwvcstypes:rwtasklet xmlns:rwvcstypes="http://riftio.com/ns/riftware-1.0/rw-manifest">
	<rwvcstypes:plugin-directory>pytoytasklet</rwvcstypes:plugin-directory>	
	<rwvcstypes:plugin-name>pytoytasklet</rwvcstypes:plugin-name>	
	<rwvcstypes:plugin-version>pytoytasklet</rwvcstypes:plugin-version>	
      </rwvcstypes:rwtasklet>
    </rw-manifest:component>
    </rw-manifest:inventory>
  </rw-manifest:manifest>
</config>
    '''
    '''
<mgmt-domain xmlns="http://riftio.com/ns/riftware-1.0/rw-mc">
  <domain xmlns="http://riftio.com/ns/riftware-1.0/rw-mc"/>
</mgmt-domain>
    '''    
    '''
<config xmlns:xc="urn:ietf:params:xml:ns:netconf:base:1.0">
<dyn-schema-test-b xmlns="http://riftio.com/ns/riftware-1.0/rw-dyn-schema-test-b">
<hello-world-b xc:operation="create">
testing
</hello-world-b>
</dyn-schema-test-b>
</config>



    '''

    #print(nc_mgr.edit_config(target="running",
    #                         config=xml))

    #print(nc_mgr.dispatch(lxml.etree.fromstring(xml)))
    #print(nc_mgr.get_config(source="running", filter=('subtree',xml)))
    print(nc_mgr.get(('subtree',xml)))

if __name__ == "__main__":
    main()
    
