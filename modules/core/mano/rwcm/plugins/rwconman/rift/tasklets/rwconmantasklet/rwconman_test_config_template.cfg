# This template has all supported TAGs.
# This template can be used as input to the xlate_cfg.py script as follows:

# python3 ./xlate_cfg.py -i ./rwconman_test_config_template.cfg -o ./rwconman_test_config.cfg -x ./rwconman_test_xlate_dict.yml


# This is error
#0. <rw_connection_point_name test/cp2>

# Following are simple TAGs
1. This is Management IP: <rw_mgmt_ip>
2. This is Username: <rw_username>
3. This is Password: <rw_password>
4. This is globally unique connection point: <rw_connection_point_name test/cp1>

# Following are colon separated complex TAGs
5. This is connection point for a given VNF with unique member index: <rw_unique_index:rw_connection_point_name 2:test/cp1>
6. This is converting connection point IP address into network address: <rw_connection_point:masklen_network test/cp1:24> 
7. This is converting connection point IP address into boadcast address: <rw_connection_point:masklen_broadcast test/cp1:24>

# Following generated tuple with original connectino point name (Global only)
8. This is not used anywhere: <rw_connection_point_tuple test/cp1>

# Following are multi-colon separated complex TAGs
9. This is converting connection point IP address into network address VNF with unique member index: <rw_unique_index:rw_connection_point:masklen_network 2:test/cp1:24>
10. This is converting connection point IP address into network address VNF with unique member index: <rw_unique_index:rw_connection_point:masklen_broadcast 2:test/cp1:24>

# Following test all of the above in single line
11. All at once: START| rw_mgmt_ip: <rw_mgmt_ip> | rw_username: <rw_username> | rw_password: <rw_password> | global CP: <rw_connection_point_name test/cp1> | 1 CP: <rw_unique_index:rw_connection_point_name 1:test/cp1> | network: <rw_connection_point:masklen_network test/cp1:24> | broadcast: <rw_connection_point:masklen_broadcast test/cp1:24> | tuple: <rw_connection_point_tuple test/cp1> | 2 network: <rw_unique_index:rw_connection_point:masklen_network 2:test/cp1:24> | 2 broadcast: <rw_unique_index:rw_connection_point:masklen_broadcast 2:test/cp1:24> |END

# Need to work on the solution for multiple pattern of same type in single line.

