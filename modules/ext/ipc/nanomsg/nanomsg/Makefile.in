# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 2013 Luca Barbato
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom
# the Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.




VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
noinst_PROGRAMS = perf/inproc_lat$(EXEEXT) perf/inproc_thr$(EXEEXT) \
	perf/local_lat$(EXEEXT) perf/remote_lat$(EXEEXT) \
	perf/local_thr$(EXEEXT) perf/remote_thr$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_2) $(am__EXEEXT_3) $(am__EXEEXT_4)
bin_PROGRAMS = $(am__EXEEXT_1)
@NANOCAT_TRUE@am__append_1 = nanocat
subdir = .
DIST_COMMON = README $(am__configure_deps) $(dist_man1_MANS) \
	$(dist_man3_MANS) $(dist_man7_MANS) $(nninclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/libnanomsg.pc.in $(top_srcdir)/configure AUTHORS \
	COPYING compile config.guess config.sub depcomp install-sh \
	ltmain.sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_pthread.m4 \
	$(top_srcdir)/m4/dolt.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = libnanomsg.pc
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man3dir)" \
	"$(DESTDIR)$(man7dir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(nnincludedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libnanomsg_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/core/ep.lo src/core/epbase.lo src/core/global.lo \
	src/core/pipe.lo src/core/poll.lo src/core/sock.lo \
	src/core/sockbase.lo src/core/device.lo src/core/symbol.lo
am__objects_2 = src/aio/ctx.lo src/aio/fsm.lo src/aio/poller.lo \
	src/aio/pool.lo src/aio/timer.lo src/aio/timerset.lo \
	src/aio/usock.lo src/aio/worker.lo
am__objects_3 = src/utils/alloc.lo src/utils/atomic.lo \
	src/utils/chunk.lo src/utils/chunkref.lo src/utils/clock.lo \
	src/utils/closefd.lo src/utils/efd.lo src/utils/err.lo \
	src/utils/glock.lo src/utils/hash.lo src/utils/list.lo \
	src/utils/msg.lo src/utils/mutex.lo src/utils/queue.lo \
	src/utils/random.lo src/utils/sem.lo src/utils/sleep.lo \
	src/utils/stopwatch.lo src/utils/thread.lo src/utils/wire.lo
am__objects_4 = src/protocols/bus/bus.lo src/protocols/bus/xbus.lo
am__objects_5 = src/protocols/pipeline/push.lo \
	src/protocols/pipeline/pull.lo src/protocols/pipeline/xpull.lo \
	src/protocols/pipeline/xpush.lo
am__objects_6 = src/protocols/pair/pair.lo src/protocols/pair/xpair.lo
am__objects_7 = src/protocols/pubsub/pub.lo \
	src/protocols/pubsub/sub.lo src/protocols/pubsub/trie.lo \
	src/protocols/pubsub/xpub.lo src/protocols/pubsub/xsub.lo
am__objects_8 = src/protocols/reqrep/req.lo \
	src/protocols/reqrep/rep.lo src/protocols/reqrep/xrep.lo \
	src/protocols/reqrep/xreq.lo
am__objects_9 = src/protocols/survey/respondent.lo \
	src/protocols/survey/surveyor.lo \
	src/protocols/survey/xrespondent.lo \
	src/protocols/survey/xsurveyor.lo
am__objects_10 = src/protocols/utils/dist.lo \
	src/protocols/utils/excl.lo src/protocols/utils/fq.lo \
	src/protocols/utils/lb.lo src/protocols/utils/priolist.lo
am__objects_11 = $(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10)
am__objects_12 = src/transports/utils/backoff.lo \
	src/transports/utils/dns.lo src/transports/utils/iface.lo \
	src/transports/utils/literal.lo src/transports/utils/port.lo \
	src/transports/utils/streamhdr.lo
am__objects_13 = src/transports/inproc/binproc.lo \
	src/transports/inproc/cinproc.lo \
	src/transports/inproc/inproc.lo src/transports/inproc/ins.lo \
	src/transports/inproc/msgqueue.lo \
	src/transports/inproc/sinproc.lo
am__objects_14 = src/transports/ipc/aipc.lo src/transports/ipc/bipc.lo \
	src/transports/ipc/cipc.lo src/transports/ipc/ipc.lo \
	src/transports/ipc/sipc.lo
am__objects_15 = src/transports/tcp/atcp.lo src/transports/tcp/btcp.lo \
	src/transports/tcp/ctcp.lo src/transports/tcp/stcp.lo \
	src/transports/tcp/tcp.lo
am__objects_16 = $(am__objects_12) $(am__objects_13) $(am__objects_14) \
	$(am__objects_15)
am_libnanomsg_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_11) $(am__objects_16)
libnanomsg_la_OBJECTS = $(am_libnanomsg_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
libnanomsg_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libnanomsg_la_LDFLAGS) $(LDFLAGS) -o $@
@NANOCAT_TRUE@am__EXEEXT_1 = nanocat$(EXEEXT)
am__EXEEXT_2 = tests/inproc$(EXEEXT) tests/inproc_shutdown$(EXEEXT) \
	tests/ipc$(EXEEXT) tests/ipc_shutdown$(EXEEXT) \
	tests/tcp$(EXEEXT) tests/tcp_shutdown$(EXEEXT)
am__EXEEXT_3 = tests/pair$(EXEEXT) tests/pubsub$(EXEEXT) \
	tests/reqrep$(EXEEXT) tests/pipeline$(EXEEXT) \
	tests/survey$(EXEEXT) tests/bus$(EXEEXT)
am__EXEEXT_4 = tests/block$(EXEEXT) tests/term$(EXEEXT) \
	tests/timeo$(EXEEXT) tests/iovec$(EXEEXT) tests/msg$(EXEEXT) \
	tests/prio$(EXEEXT) tests/poll$(EXEEXT) tests/device$(EXEEXT) \
	tests/emfile$(EXEEXT) tests/domain$(EXEEXT) \
	tests/trie$(EXEEXT) tests/list$(EXEEXT) tests/hash$(EXEEXT) \
	tests/symbol$(EXEEXT) tests/separation$(EXEEXT) \
	tests/zerocopy$(EXEEXT) tests/shutdown$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_nanocat_OBJECTS = tools/nanocat.$(OBJEXT) tools/options.$(OBJEXT)
nanocat_OBJECTS = $(am_nanocat_OBJECTS)
nanocat_LDADD = $(LDADD)
nanocat_DEPENDENCIES = libnanomsg.la
perf_inproc_lat_SOURCES = perf/inproc_lat.c
perf_inproc_lat_OBJECTS = perf/inproc_lat.$(OBJEXT)
perf_inproc_lat_LDADD = $(LDADD)
perf_inproc_lat_DEPENDENCIES = libnanomsg.la
perf_inproc_thr_SOURCES = perf/inproc_thr.c
perf_inproc_thr_OBJECTS = perf/inproc_thr.$(OBJEXT)
perf_inproc_thr_LDADD = $(LDADD)
perf_inproc_thr_DEPENDENCIES = libnanomsg.la
perf_local_lat_SOURCES = perf/local_lat.c
perf_local_lat_OBJECTS = perf/local_lat.$(OBJEXT)
perf_local_lat_LDADD = $(LDADD)
perf_local_lat_DEPENDENCIES = libnanomsg.la
perf_local_thr_SOURCES = perf/local_thr.c
perf_local_thr_OBJECTS = perf/local_thr.$(OBJEXT)
perf_local_thr_LDADD = $(LDADD)
perf_local_thr_DEPENDENCIES = libnanomsg.la
perf_remote_lat_SOURCES = perf/remote_lat.c
perf_remote_lat_OBJECTS = perf/remote_lat.$(OBJEXT)
perf_remote_lat_LDADD = $(LDADD)
perf_remote_lat_DEPENDENCIES = libnanomsg.la
perf_remote_thr_SOURCES = perf/remote_thr.c
perf_remote_thr_OBJECTS = perf/remote_thr.$(OBJEXT)
perf_remote_thr_LDADD = $(LDADD)
perf_remote_thr_DEPENDENCIES = libnanomsg.la
tests_block_SOURCES = tests/block.c
tests_block_OBJECTS = tests/block.$(OBJEXT)
tests_block_LDADD = $(LDADD)
tests_block_DEPENDENCIES = libnanomsg.la
tests_bus_SOURCES = tests/bus.c
tests_bus_OBJECTS = tests/bus.$(OBJEXT)
tests_bus_LDADD = $(LDADD)
tests_bus_DEPENDENCIES = libnanomsg.la
tests_device_SOURCES = tests/device.c
tests_device_OBJECTS = tests/device.$(OBJEXT)
tests_device_LDADD = $(LDADD)
tests_device_DEPENDENCIES = libnanomsg.la
tests_domain_SOURCES = tests/domain.c
tests_domain_OBJECTS = tests/domain.$(OBJEXT)
tests_domain_LDADD = $(LDADD)
tests_domain_DEPENDENCIES = libnanomsg.la
tests_emfile_SOURCES = tests/emfile.c
tests_emfile_OBJECTS = tests/emfile.$(OBJEXT)
tests_emfile_LDADD = $(LDADD)
tests_emfile_DEPENDENCIES = libnanomsg.la
tests_hash_SOURCES = tests/hash.c
tests_hash_OBJECTS = tests/hash.$(OBJEXT)
tests_hash_LDADD = $(LDADD)
tests_hash_DEPENDENCIES = libnanomsg.la
tests_inproc_SOURCES = tests/inproc.c
tests_inproc_OBJECTS = tests/inproc.$(OBJEXT)
tests_inproc_LDADD = $(LDADD)
tests_inproc_DEPENDENCIES = libnanomsg.la
tests_inproc_shutdown_SOURCES = tests/inproc_shutdown.c
tests_inproc_shutdown_OBJECTS = tests/inproc_shutdown.$(OBJEXT)
tests_inproc_shutdown_LDADD = $(LDADD)
tests_inproc_shutdown_DEPENDENCIES = libnanomsg.la
tests_iovec_SOURCES = tests/iovec.c
tests_iovec_OBJECTS = tests/iovec.$(OBJEXT)
tests_iovec_LDADD = $(LDADD)
tests_iovec_DEPENDENCIES = libnanomsg.la
tests_ipc_SOURCES = tests/ipc.c
tests_ipc_OBJECTS = tests/ipc.$(OBJEXT)
tests_ipc_LDADD = $(LDADD)
tests_ipc_DEPENDENCIES = libnanomsg.la
tests_ipc_shutdown_SOURCES = tests/ipc_shutdown.c
tests_ipc_shutdown_OBJECTS = tests/ipc_shutdown.$(OBJEXT)
tests_ipc_shutdown_LDADD = $(LDADD)
tests_ipc_shutdown_DEPENDENCIES = libnanomsg.la
tests_list_SOURCES = tests/list.c
tests_list_OBJECTS = tests/list.$(OBJEXT)
tests_list_LDADD = $(LDADD)
tests_list_DEPENDENCIES = libnanomsg.la
tests_msg_SOURCES = tests/msg.c
tests_msg_OBJECTS = tests/msg.$(OBJEXT)
tests_msg_LDADD = $(LDADD)
tests_msg_DEPENDENCIES = libnanomsg.la
tests_pair_SOURCES = tests/pair.c
tests_pair_OBJECTS = tests/pair.$(OBJEXT)
tests_pair_LDADD = $(LDADD)
tests_pair_DEPENDENCIES = libnanomsg.la
tests_pipeline_SOURCES = tests/pipeline.c
tests_pipeline_OBJECTS = tests/pipeline.$(OBJEXT)
tests_pipeline_LDADD = $(LDADD)
tests_pipeline_DEPENDENCIES = libnanomsg.la
tests_poll_SOURCES = tests/poll.c
tests_poll_OBJECTS = tests/poll.$(OBJEXT)
tests_poll_LDADD = $(LDADD)
tests_poll_DEPENDENCIES = libnanomsg.la
tests_prio_SOURCES = tests/prio.c
tests_prio_OBJECTS = tests/prio.$(OBJEXT)
tests_prio_LDADD = $(LDADD)
tests_prio_DEPENDENCIES = libnanomsg.la
tests_pubsub_SOURCES = tests/pubsub.c
tests_pubsub_OBJECTS = tests/pubsub.$(OBJEXT)
tests_pubsub_LDADD = $(LDADD)
tests_pubsub_DEPENDENCIES = libnanomsg.la
tests_reqrep_SOURCES = tests/reqrep.c
tests_reqrep_OBJECTS = tests/reqrep.$(OBJEXT)
tests_reqrep_LDADD = $(LDADD)
tests_reqrep_DEPENDENCIES = libnanomsg.la
tests_separation_SOURCES = tests/separation.c
tests_separation_OBJECTS = tests/separation.$(OBJEXT)
tests_separation_LDADD = $(LDADD)
tests_separation_DEPENDENCIES = libnanomsg.la
tests_shutdown_SOURCES = tests/shutdown.c
tests_shutdown_OBJECTS = tests/shutdown.$(OBJEXT)
tests_shutdown_LDADD = $(LDADD)
tests_shutdown_DEPENDENCIES = libnanomsg.la
tests_survey_SOURCES = tests/survey.c
tests_survey_OBJECTS = tests/survey.$(OBJEXT)
tests_survey_LDADD = $(LDADD)
tests_survey_DEPENDENCIES = libnanomsg.la
tests_symbol_SOURCES = tests/symbol.c
tests_symbol_OBJECTS = tests/symbol.$(OBJEXT)
tests_symbol_LDADD = $(LDADD)
tests_symbol_DEPENDENCIES = libnanomsg.la
tests_tcp_SOURCES = tests/tcp.c
tests_tcp_OBJECTS = tests/tcp.$(OBJEXT)
tests_tcp_LDADD = $(LDADD)
tests_tcp_DEPENDENCIES = libnanomsg.la
tests_tcp_shutdown_SOURCES = tests/tcp_shutdown.c
tests_tcp_shutdown_OBJECTS = tests/tcp_shutdown.$(OBJEXT)
tests_tcp_shutdown_LDADD = $(LDADD)
tests_tcp_shutdown_DEPENDENCIES = libnanomsg.la
tests_term_SOURCES = tests/term.c
tests_term_OBJECTS = tests/term.$(OBJEXT)
tests_term_LDADD = $(LDADD)
tests_term_DEPENDENCIES = libnanomsg.la
tests_timeo_SOURCES = tests/timeo.c
tests_timeo_OBJECTS = tests/timeo.$(OBJEXT)
tests_timeo_LDADD = $(LDADD)
tests_timeo_DEPENDENCIES = libnanomsg.la
tests_trie_SOURCES = tests/trie.c
tests_trie_OBJECTS = tests/trie.$(OBJEXT)
tests_trie_LDADD = $(LDADD)
tests_trie_DEPENDENCIES = libnanomsg.la
tests_zerocopy_SOURCES = tests/zerocopy.c
tests_zerocopy_OBJECTS = tests/zerocopy.$(OBJEXT)
tests_zerocopy_LDADD = $(LDADD)
tests_zerocopy_DEPENDENCIES = libnanomsg.la
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libnanomsg_la_SOURCES) $(nanocat_SOURCES) \
	perf/inproc_lat.c perf/inproc_thr.c perf/local_lat.c \
	perf/local_thr.c perf/remote_lat.c perf/remote_thr.c \
	tests/block.c tests/bus.c tests/device.c tests/domain.c \
	tests/emfile.c tests/hash.c tests/inproc.c \
	tests/inproc_shutdown.c tests/iovec.c tests/ipc.c \
	tests/ipc_shutdown.c tests/list.c tests/msg.c tests/pair.c \
	tests/pipeline.c tests/poll.c tests/prio.c tests/pubsub.c \
	tests/reqrep.c tests/separation.c tests/shutdown.c \
	tests/survey.c tests/symbol.c tests/tcp.c tests/tcp_shutdown.c \
	tests/term.c tests/timeo.c tests/trie.c tests/zerocopy.c
DIST_SOURCES = $(libnanomsg_la_SOURCES) $(nanocat_SOURCES) \
	perf/inproc_lat.c perf/inproc_thr.c perf/local_lat.c \
	perf/local_thr.c perf/remote_lat.c perf/remote_thr.c \
	tests/block.c tests/bus.c tests/device.c tests/domain.c \
	tests/emfile.c tests/hash.c tests/inproc.c \
	tests/inproc_shutdown.c tests/iovec.c tests/ipc.c \
	tests/ipc_shutdown.c tests/list.c tests/msg.c tests/pair.c \
	tests/pipeline.c tests/poll.c tests/prio.c tests/pubsub.c \
	tests/reqrep.c tests/separation.c tests/shutdown.c \
	tests/survey.c tests/symbol.c tests/tcp.c tests/tcp_shutdown.c \
	tests/term.c tests/timeo.c tests/trie.c tests/zerocopy.c
man1dir = $(mandir)/man1
man3dir = $(mandir)/man3
man7dir = $(mandir)/man7
NROFF = nroff
MANS = $(dist_man1_MANS) $(dist_man3_MANS) $(dist_man7_MANS)
DATA = $(doc_DATA) $(pkgconfig_DATA)
HEADERS = $(nninclude_HEADERS)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz $(distdir).zip
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
ASCIIDOC = @ASCIIDOC@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOLT_BASH = @DOLT_BASH@
DOLT_CLEANFILES = @DOLT_CLEANFILES@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTCOMPILE = @LTCOMPILE@
LTCXXCOMPILE = @LTCXXCOMPILE@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
NN_ABI_VERSION = @NN_ABI_VERSION@
NN_LIBTOOL_VERSION = @NN_LIBTOOL_VERSION@
NN_PACKAGE_VERSION = @NN_PACKAGE_VERSION@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PTHREAD_CC = @PTHREAD_CC@
PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
PTHREAD_LIBS = @PTHREAD_LIBS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMLTO = @XMLTO@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
ax_pthread_config = @ax_pthread_config@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
ACLOCAL_AMFLAGS = -I m4
DISTCLEANFILES = @DOLT_CLEANFILES@

#  Extra files to be included into the source package.
EXTRA_DIST = doc/asciidoc.conf doc/htmldoc.css $(MAN1) $(MAN3) $(MAN7) \
	tests/testutil.h ./abi_version.sh ./package_version.sh \
	./src/CMakeLists.txt ./CMakeLists.txt

################################################################################
#  nanomsg library                                                             #
################################################################################
nnincludedir = $(includedir)/nanomsg
nninclude_HEADERS = \
    src/nn.h \
    src/inproc.h \
    src/ipc.h \
    src/tcp.h \
    src/pair.h \
    src/pubsub.h \
    src/reqrep.h \
    src/pipeline.h \
    src/survey.h \
    src/bus.h

lib_LTLIBRARIES = libnanomsg.la
NANOMSG_CORE = \
    src/core/ep.h \
    src/core/ep.c \
    src/core/epbase.c \
    src/core/global.h \
    src/core/global.c \
    src/core/pipe.c \
    src/core/poll.c \
    src/core/sock.h \
    src/core/sock.c \
    src/core/sockbase.c \
    src/core/device.c \
    src/core/symbol.c

NANOMSG_AIO = \
    src/aio/ctx.h \
    src/aio/ctx.c \
    src/aio/fsm.h \
    src/aio/fsm.c \
    src/aio/poller.h \
    src/aio/poller.c \
    src/aio/poller_epoll.h \
    src/aio/poller_epoll.inc \
    src/aio/poller_kqueue.h \
    src/aio/poller_kqueue.inc \
    src/aio/poller_poll.h \
    src/aio/poller_poll.inc \
    src/aio/pool.h \
    src/aio/pool.c \
    src/aio/timer.h \
    src/aio/timer.c \
    src/aio/timerset.h \
    src/aio/timerset.c \
    src/aio/usock.h \
    src/aio/usock.c \
    src/aio/usock_posix.h \
    src/aio/usock_posix.inc \
    src/aio/usock_win.h \
    src/aio/usock_win.inc \
    src/aio/worker.h \
    src/aio/worker.c \
    src/aio/worker_posix.h \
    src/aio/worker_posix.inc \
    src/aio/worker_win.h \
    src/aio/worker_win.inc

NANOMSG_UTILS = \
    src/utils/alloc.h \
    src/utils/alloc.c \
    src/utils/atomic.h \
    src/utils/atomic.c \
    src/utils/chunk.h \
    src/utils/chunk.c \
    src/utils/chunkref.h \
    src/utils/chunkref.c \
    src/utils/clock.h \
    src/utils/clock.c \
    src/utils/closefd.h \
    src/utils/closefd.c \
    src/utils/cont.h \
    src/utils/efd.h \
    src/utils/efd.c \
    src/utils/efd_eventfd.h \
    src/utils/efd_eventfd.inc \
    src/utils/efd_pipe.h \
    src/utils/efd_pipe.inc \
    src/utils/efd_socketpair.h \
    src/utils/efd_socketpair.inc \
    src/utils/efd_win.h \
    src/utils/efd_win.inc \
    src/utils/err.h \
    src/utils/err.c \
    src/utils/fast.h \
    src/utils/fd.h \
    src/utils/glock.h \
    src/utils/glock.c \
    src/utils/hash.h \
    src/utils/hash.c \
    src/utils/int.h \
    src/utils/list.h \
    src/utils/list.c \
    src/utils/msg.h \
    src/utils/msg.c \
    src/utils/mutex.h \
    src/utils/mutex.c \
    src/utils/queue.h \
    src/utils/queue.c \
    src/utils/random.h \
    src/utils/random.c \
    src/utils/sem.h \
    src/utils/sem.c \
    src/utils/sleep.h \
    src/utils/sleep.c \
    src/utils/stopwatch.h \
    src/utils/stopwatch.c \
    src/utils/thread.h \
    src/utils/thread.c \
    src/utils/thread_posix.h \
    src/utils/thread_posix.inc \
    src/utils/thread_win.h \
    src/utils/thread_win.inc \
    src/utils/win.h \
    src/utils/wire.h \
    src/utils/wire.c

PROTOCOLS_UTILS = \
    src/protocols/utils/dist.h \
    src/protocols/utils/dist.c \
    src/protocols/utils/excl.h \
    src/protocols/utils/excl.c \
    src/protocols/utils/fq.h \
    src/protocols/utils/fq.c \
    src/protocols/utils/lb.h \
    src/protocols/utils/lb.c \
    src/protocols/utils/priolist.h \
    src/protocols/utils/priolist.c

PROTOCOLS_BUS = \
    src/protocols/bus/bus.h \
    src/protocols/bus/bus.c \
    src/protocols/bus/xbus.h \
    src/protocols/bus/xbus.c

PROTOCOLS_PIPELINE = \
    src/protocols/pipeline/push.h \
    src/protocols/pipeline/push.c \
    src/protocols/pipeline/pull.h \
    src/protocols/pipeline/pull.c \
    src/protocols/pipeline/xpull.h \
    src/protocols/pipeline/xpull.c \
    src/protocols/pipeline/xpush.h \
    src/protocols/pipeline/xpush.c

PROTOCOLS_PAIR = \
    src/protocols/pair/pair.h \
    src/protocols/pair/pair.c \
    src/protocols/pair/xpair.h \
    src/protocols/pair/xpair.c

PROTOCOLS_PUBSUB = \
    src/protocols/pubsub/pub.h \
    src/protocols/pubsub/pub.c \
    src/protocols/pubsub/sub.h \
    src/protocols/pubsub/sub.c \
    src/protocols/pubsub/trie.h \
    src/protocols/pubsub/trie.c \
    src/protocols/pubsub/xpub.h \
    src/protocols/pubsub/xpub.c \
    src/protocols/pubsub/xsub.h \
    src/protocols/pubsub/xsub.c

PROTOCOLS_REQREP = \
    src/protocols/reqrep/req.h \
    src/protocols/reqrep/req.c \
    src/protocols/reqrep/rep.h \
    src/protocols/reqrep/rep.c \
    src/protocols/reqrep/xrep.h \
    src/protocols/reqrep/xrep.c \
    src/protocols/reqrep/xreq.h \
    src/protocols/reqrep/xreq.c

PROTOCOLS_SURVEY = \
    src/protocols/survey/respondent.h \
    src/protocols/survey/respondent.c \
    src/protocols/survey/surveyor.h \
    src/protocols/survey/surveyor.c \
    src/protocols/survey/xrespondent.h \
    src/protocols/survey/xrespondent.c \
    src/protocols/survey/xsurveyor.h \
    src/protocols/survey/xsurveyor.c

NANOMSG_PROTOCOLS = \
    $(PROTOCOLS_BUS) \
    $(PROTOCOLS_PIPELINE) \
    $(PROTOCOLS_PAIR) \
    $(PROTOCOLS_PUBSUB) \
    $(PROTOCOLS_REQREP) \
    $(PROTOCOLS_SURVEY) \
    $(PROTOCOLS_UTILS) \
    $(PROTOCOLS_INPROC) \
    $(PROTOCOLS_IPC) \
    $(PROTOCOLS_TCP)

TRANSPORTS_UTILS = \
    src/transports/utils/backoff.h \
    src/transports/utils/backoff.c \
    src/transports/utils/dns.h \
    src/transports/utils/dns.c \
    src/transports/utils/dns_getaddrinfo.h \
    src/transports/utils/dns_getaddrinfo.inc \
    src/transports/utils/dns_getaddrinfo_a.h \
    src/transports/utils/dns_getaddrinfo_a.inc \
    src/transports/utils/iface.h \
    src/transports/utils/iface.c \
    src/transports/utils/literal.h \
    src/transports/utils/literal.c \
    src/transports/utils/port.h \
    src/transports/utils/port.c \
    src/transports/utils/streamhdr.h \
    src/transports/utils/streamhdr.c

TRANSPORTS_INPROC = \
    src/transports/inproc/binproc.h \
    src/transports/inproc/binproc.c \
    src/transports/inproc/cinproc.h \
    src/transports/inproc/cinproc.c \
    src/transports/inproc/inproc.h \
    src/transports/inproc/inproc.c \
    src/transports/inproc/ins.h \
    src/transports/inproc/ins.c \
    src/transports/inproc/msgqueue.h \
    src/transports/inproc/msgqueue.c \
    src/transports/inproc/sinproc.h \
    src/transports/inproc/sinproc.c

TRANSPORTS_IPC = \
    src/transports/ipc/aipc.h \
    src/transports/ipc/aipc.c \
    src/transports/ipc/bipc.h \
    src/transports/ipc/bipc.c \
    src/transports/ipc/cipc.h \
    src/transports/ipc/cipc.c \
    src/transports/ipc/ipc.h \
    src/transports/ipc/ipc.c \
    src/transports/ipc/sipc.h \
    src/transports/ipc/sipc.c

TRANSPORTS_TCP = \
    src/transports/tcp/atcp.h \
    src/transports/tcp/atcp.c \
    src/transports/tcp/btcp.h \
    src/transports/tcp/btcp.c \
    src/transports/tcp/ctcp.h \
    src/transports/tcp/ctcp.c \
    src/transports/tcp/stcp.h \
    src/transports/tcp/stcp.c \
    src/transports/tcp/tcp.h \
    src/transports/tcp/tcp.c

NANOMSG_TRANSPORTS = \
    $(TRANSPORTS_UTILS) \
    $(TRANSPORTS_INPROC) \
    $(TRANSPORTS_IPC) \
    $(TRANSPORTS_TCP)

libnanomsg_la_SOURCES = \
    src/transport.h \
    src/protocol.h \
    $(NANOMSG_CORE) \
    $(NANOMSG_AIO) \
    $(NANOMSG_UTILS) \
    $(NANOMSG_PROTOCOLS) \
    $(NANOMSG_TRANSPORTS)

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libnanomsg.pc
libnanomsg_la_LDFLAGS = -version-info @NN_LIBTOOL_VERSION@

################################################################################
#  documentation                                                               #
################################################################################

#  Source files.
MAN7 = \
    doc/nanomsg.txt \
    doc/nn_pair.txt \
    doc/nn_reqrep.txt \
    doc/nn_pubsub.txt \
    doc/nn_survey.txt \
    doc/nn_pipeline.txt \
    doc/nn_bus.txt \
    doc/nn_inproc.txt \
    doc/nn_ipc.txt \
    doc/nn_tcp.txt \
    doc/nn_env.txt

MAN3 = \
    doc/nn_errno.txt \
    doc/nn_strerror.txt \
    doc/nn_symbol.txt \
    doc/nn_term.txt \
    doc/nn_allocmsg.txt \
    doc/nn_freemsg.txt \
    doc/nn_socket.txt \
    doc/nn_close.txt \
    doc/nn_getsockopt.txt \
    doc/nn_setsockopt.txt \
    doc/nn_bind.txt \
    doc/nn_connect.txt \
    doc/nn_shutdown.txt \
    doc/nn_send.txt \
    doc/nn_recv.txt \
    doc/nn_sendmsg.txt \
    doc/nn_recvmsg.txt \
    doc/nn_device.txt \
    doc/nn_cmsg.txt \
    doc/nn_poll.txt

MAN1 = \
    doc/nanocat.txt

@DOC_TRUE@SUFFIXES = .1 .3 .7 .1.html .3.html .7.html

#  Cause man pages to be generated and installed.
@DOC_TRUE@dist_man1_MANS = $(MAN1:%.txt=%.1)
@DOC_TRUE@dist_man3_MANS = $(MAN3:%.txt=%.3)
@DOC_TRUE@dist_man7_MANS = $(MAN7:%.txt=%.7)

#  Cause HTML docs to be generated.
@DOC_TRUE@doc_DATA = $(MAN1:%.txt=%.1.html) $(MAN3:%.txt=%.3.html) $(MAN7:%.txt=%.7.html)

#  Extra files to be cleaned.
@DOC_TRUE@CLEANFILES = $(MAN1:%.txt=%.1) $(MAN3:%.txt=%.3) $(MAN7:%.txt=%.7) \
@DOC_TRUE@    $(MAN1:%.txt=%.1.html) $(MAN3:%.txt=%.3.html) $(MAN7:%.txt=%.7.html)

LDADD = libnanomsg.la

################################################################################
#  automated tests                                                             #
################################################################################
TRANSPORT_TESTS = \
    tests/inproc \
    tests/inproc_shutdown \
    tests/ipc \
    tests/ipc_shutdown \
    tests/tcp \
    tests/tcp_shutdown

PROTOCOL_TESTS = \
    tests/pair \
    tests/pubsub \
    tests/reqrep \
    tests/pipeline \
    tests/survey \
    tests/bus

FEATURE_TESTS = \
    tests/block \
    tests/term \
    tests/timeo \
    tests/iovec \
    tests/msg \
    tests/prio \
    tests/poll \
    tests/device \
    tests/emfile \
    tests/domain \
    tests/trie \
    tests/list \
    tests/hash \
    tests/symbol \
    tests/separation \
    tests/zerocopy \
    tests/shutdown

TESTS = $(check_PROGRAMS)
nanocat_SOURCES = \
	tools/nanocat.c \
	tools/options.c \
	tools/options.h

all: all-am

.SUFFIXES:
.SUFFIXES: .1 .3 .7 .1.html .3.html .7.html .c .lo .o .obj .txt .xml
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
libnanomsg.pc: $(top_builddir)/config.status $(srcdir)/libnanomsg.pc.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
src/core/$(am__dirstamp):
	@$(MKDIR_P) src/core
	@: > src/core/$(am__dirstamp)
src/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/core/$(DEPDIR)
	@: > src/core/$(DEPDIR)/$(am__dirstamp)
src/core/ep.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/epbase.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/global.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/pipe.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/poll.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/sock.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/sockbase.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/device.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/core/symbol.lo: src/core/$(am__dirstamp) \
	src/core/$(DEPDIR)/$(am__dirstamp)
src/aio/$(am__dirstamp):
	@$(MKDIR_P) src/aio
	@: > src/aio/$(am__dirstamp)
src/aio/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/aio/$(DEPDIR)
	@: > src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/ctx.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/fsm.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/poller.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/pool.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/timer.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/timerset.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/usock.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/aio/worker.lo: src/aio/$(am__dirstamp) \
	src/aio/$(DEPDIR)/$(am__dirstamp)
src/utils/$(am__dirstamp):
	@$(MKDIR_P) src/utils
	@: > src/utils/$(am__dirstamp)
src/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/utils/$(DEPDIR)
	@: > src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/alloc.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/atomic.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/chunk.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/chunkref.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/clock.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/closefd.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/efd.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/err.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/glock.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/hash.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/list.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/msg.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/mutex.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/queue.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/random.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/sem.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/sleep.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/stopwatch.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/thread.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/utils/wire.lo: src/utils/$(am__dirstamp) \
	src/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/bus
	@: > src/protocols/bus/$(am__dirstamp)
src/protocols/bus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/bus/$(DEPDIR)
	@: > src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/bus.lo: src/protocols/bus/$(am__dirstamp) \
	src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/bus/xbus.lo: src/protocols/bus/$(am__dirstamp) \
	src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pipeline
	@: > src/protocols/pipeline/$(am__dirstamp)
src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pipeline/$(DEPDIR)
	@: > src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/push.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/pull.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/xpull.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pipeline/xpush.lo:  \
	src/protocols/pipeline/$(am__dirstamp) \
	src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pair
	@: > src/protocols/pair/$(am__dirstamp)
src/protocols/pair/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pair/$(DEPDIR)
	@: > src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/pair.lo: src/protocols/pair/$(am__dirstamp) \
	src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pair/xpair.lo: src/protocols/pair/$(am__dirstamp) \
	src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pubsub
	@: > src/protocols/pubsub/$(am__dirstamp)
src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/pubsub/$(DEPDIR)
	@: > src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/pub.lo: src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/sub.lo: src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/trie.lo: src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/xpub.lo: src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/pubsub/xsub.lo: src/protocols/pubsub/$(am__dirstamp) \
	src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/reqrep
	@: > src/protocols/reqrep/$(am__dirstamp)
src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/reqrep/$(DEPDIR)
	@: > src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/req.lo: src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/rep.lo: src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/xrep.lo: src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/reqrep/xreq.lo: src/protocols/reqrep/$(am__dirstamp) \
	src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/survey
	@: > src/protocols/survey/$(am__dirstamp)
src/protocols/survey/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/survey/$(DEPDIR)
	@: > src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/respondent.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/surveyor.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/xrespondent.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/survey/xsurveyor.lo:  \
	src/protocols/survey/$(am__dirstamp) \
	src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/utils
	@: > src/protocols/utils/$(am__dirstamp)
src/protocols/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/protocols/utils/$(DEPDIR)
	@: > src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/dist.lo: src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/excl.lo: src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/fq.lo: src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/lb.lo: src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/protocols/utils/priolist.lo: src/protocols/utils/$(am__dirstamp) \
	src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/$(am__dirstamp):
	@$(MKDIR_P) src/transports/utils
	@: > src/transports/utils/$(am__dirstamp)
src/transports/utils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/utils/$(DEPDIR)
	@: > src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/backoff.lo: src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/dns.lo: src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/iface.lo: src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/literal.lo: src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/port.lo: src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/utils/streamhdr.lo:  \
	src/transports/utils/$(am__dirstamp) \
	src/transports/utils/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/$(am__dirstamp):
	@$(MKDIR_P) src/transports/inproc
	@: > src/transports/inproc/$(am__dirstamp)
src/transports/inproc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/inproc/$(DEPDIR)
	@: > src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/binproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/cinproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/inproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/ins.lo: src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/msgqueue.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/inproc/sinproc.lo:  \
	src/transports/inproc/$(am__dirstamp) \
	src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/$(am__dirstamp):
	@$(MKDIR_P) src/transports/ipc
	@: > src/transports/ipc/$(am__dirstamp)
src/transports/ipc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/ipc/$(DEPDIR)
	@: > src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/aipc.lo: src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/bipc.lo: src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/cipc.lo: src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/ipc.lo: src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/ipc/sipc.lo: src/transports/ipc/$(am__dirstamp) \
	src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/$(am__dirstamp):
	@$(MKDIR_P) src/transports/tcp
	@: > src/transports/tcp/$(am__dirstamp)
src/transports/tcp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/transports/tcp/$(DEPDIR)
	@: > src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/atcp.lo: src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/btcp.lo: src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/ctcp.lo: src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/stcp.lo: src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
src/transports/tcp/tcp.lo: src/transports/tcp/$(am__dirstamp) \
	src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
libnanomsg.la: $(libnanomsg_la_OBJECTS) $(libnanomsg_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libnanomsg_la_LINK) -rpath $(libdir) $(libnanomsg_la_OBJECTS) $(libnanomsg_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
tools/$(am__dirstamp):
	@$(MKDIR_P) tools
	@: > tools/$(am__dirstamp)
tools/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tools/$(DEPDIR)
	@: > tools/$(DEPDIR)/$(am__dirstamp)
tools/nanocat.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)
tools/options.$(OBJEXT): tools/$(am__dirstamp) \
	tools/$(DEPDIR)/$(am__dirstamp)
nanocat$(EXEEXT): $(nanocat_OBJECTS) $(nanocat_DEPENDENCIES) 
	@rm -f nanocat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nanocat_OBJECTS) $(nanocat_LDADD) $(LIBS)
perf/$(am__dirstamp):
	@$(MKDIR_P) perf
	@: > perf/$(am__dirstamp)
perf/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) perf/$(DEPDIR)
	@: > perf/$(DEPDIR)/$(am__dirstamp)
perf/inproc_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/inproc_lat$(EXEEXT): $(perf_inproc_lat_OBJECTS) $(perf_inproc_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/inproc_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_inproc_lat_OBJECTS) $(perf_inproc_lat_LDADD) $(LIBS)
perf/inproc_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/inproc_thr$(EXEEXT): $(perf_inproc_thr_OBJECTS) $(perf_inproc_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/inproc_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_inproc_thr_OBJECTS) $(perf_inproc_thr_LDADD) $(LIBS)
perf/local_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/local_lat$(EXEEXT): $(perf_local_lat_OBJECTS) $(perf_local_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/local_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_local_lat_OBJECTS) $(perf_local_lat_LDADD) $(LIBS)
perf/local_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/local_thr$(EXEEXT): $(perf_local_thr_OBJECTS) $(perf_local_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/local_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_local_thr_OBJECTS) $(perf_local_thr_LDADD) $(LIBS)
perf/remote_lat.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/remote_lat$(EXEEXT): $(perf_remote_lat_OBJECTS) $(perf_remote_lat_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/remote_lat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_remote_lat_OBJECTS) $(perf_remote_lat_LDADD) $(LIBS)
perf/remote_thr.$(OBJEXT): perf/$(am__dirstamp) \
	perf/$(DEPDIR)/$(am__dirstamp)
perf/remote_thr$(EXEEXT): $(perf_remote_thr_OBJECTS) $(perf_remote_thr_DEPENDENCIES) perf/$(am__dirstamp)
	@rm -f perf/remote_thr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(perf_remote_thr_OBJECTS) $(perf_remote_thr_LDADD) $(LIBS)
tests/$(am__dirstamp):
	@$(MKDIR_P) tests
	@: > tests/$(am__dirstamp)
tests/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) tests/$(DEPDIR)
	@: > tests/$(DEPDIR)/$(am__dirstamp)
tests/block.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/block$(EXEEXT): $(tests_block_OBJECTS) $(tests_block_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/block$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_block_OBJECTS) $(tests_block_LDADD) $(LIBS)
tests/bus.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/bus$(EXEEXT): $(tests_bus_OBJECTS) $(tests_bus_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/bus$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_bus_OBJECTS) $(tests_bus_LDADD) $(LIBS)
tests/device.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/device$(EXEEXT): $(tests_device_OBJECTS) $(tests_device_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/device$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_device_OBJECTS) $(tests_device_LDADD) $(LIBS)
tests/domain.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/domain$(EXEEXT): $(tests_domain_OBJECTS) $(tests_domain_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/domain$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_domain_OBJECTS) $(tests_domain_LDADD) $(LIBS)
tests/emfile.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/emfile$(EXEEXT): $(tests_emfile_OBJECTS) $(tests_emfile_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/emfile$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_emfile_OBJECTS) $(tests_emfile_LDADD) $(LIBS)
tests/hash.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/hash$(EXEEXT): $(tests_hash_OBJECTS) $(tests_hash_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/hash$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_hash_OBJECTS) $(tests_hash_LDADD) $(LIBS)
tests/inproc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/inproc$(EXEEXT): $(tests_inproc_OBJECTS) $(tests_inproc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/inproc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_inproc_OBJECTS) $(tests_inproc_LDADD) $(LIBS)
tests/inproc_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/inproc_shutdown$(EXEEXT): $(tests_inproc_shutdown_OBJECTS) $(tests_inproc_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/inproc_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_inproc_shutdown_OBJECTS) $(tests_inproc_shutdown_LDADD) $(LIBS)
tests/iovec.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/iovec$(EXEEXT): $(tests_iovec_OBJECTS) $(tests_iovec_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/iovec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_iovec_OBJECTS) $(tests_iovec_LDADD) $(LIBS)
tests/ipc.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/ipc$(EXEEXT): $(tests_ipc_OBJECTS) $(tests_ipc_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_OBJECTS) $(tests_ipc_LDADD) $(LIBS)
tests/ipc_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/ipc_shutdown$(EXEEXT): $(tests_ipc_shutdown_OBJECTS) $(tests_ipc_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/ipc_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_ipc_shutdown_OBJECTS) $(tests_ipc_shutdown_LDADD) $(LIBS)
tests/list.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/list$(EXEEXT): $(tests_list_OBJECTS) $(tests_list_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/list$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_list_OBJECTS) $(tests_list_LDADD) $(LIBS)
tests/msg.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/msg$(EXEEXT): $(tests_msg_OBJECTS) $(tests_msg_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/msg$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_msg_OBJECTS) $(tests_msg_LDADD) $(LIBS)
tests/pair.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/pair$(EXEEXT): $(tests_pair_OBJECTS) $(tests_pair_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pair$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pair_OBJECTS) $(tests_pair_LDADD) $(LIBS)
tests/pipeline.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/pipeline$(EXEEXT): $(tests_pipeline_OBJECTS) $(tests_pipeline_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pipeline$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pipeline_OBJECTS) $(tests_pipeline_LDADD) $(LIBS)
tests/poll.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/poll$(EXEEXT): $(tests_poll_OBJECTS) $(tests_poll_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/poll$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_poll_OBJECTS) $(tests_poll_LDADD) $(LIBS)
tests/prio.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/prio$(EXEEXT): $(tests_prio_OBJECTS) $(tests_prio_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/prio$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_prio_OBJECTS) $(tests_prio_LDADD) $(LIBS)
tests/pubsub.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/pubsub$(EXEEXT): $(tests_pubsub_OBJECTS) $(tests_pubsub_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/pubsub$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_pubsub_OBJECTS) $(tests_pubsub_LDADD) $(LIBS)
tests/reqrep.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/reqrep$(EXEEXT): $(tests_reqrep_OBJECTS) $(tests_reqrep_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/reqrep$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_reqrep_OBJECTS) $(tests_reqrep_LDADD) $(LIBS)
tests/separation.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/separation$(EXEEXT): $(tests_separation_OBJECTS) $(tests_separation_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/separation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_separation_OBJECTS) $(tests_separation_LDADD) $(LIBS)
tests/shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/shutdown$(EXEEXT): $(tests_shutdown_OBJECTS) $(tests_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_shutdown_OBJECTS) $(tests_shutdown_LDADD) $(LIBS)
tests/survey.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/survey$(EXEEXT): $(tests_survey_OBJECTS) $(tests_survey_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/survey$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_survey_OBJECTS) $(tests_survey_LDADD) $(LIBS)
tests/symbol.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/symbol$(EXEEXT): $(tests_symbol_OBJECTS) $(tests_symbol_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/symbol$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_symbol_OBJECTS) $(tests_symbol_LDADD) $(LIBS)
tests/tcp.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tcp$(EXEEXT): $(tests_tcp_OBJECTS) $(tests_tcp_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tcp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tcp_OBJECTS) $(tests_tcp_LDADD) $(LIBS)
tests/tcp_shutdown.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/tcp_shutdown$(EXEEXT): $(tests_tcp_shutdown_OBJECTS) $(tests_tcp_shutdown_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/tcp_shutdown$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_tcp_shutdown_OBJECTS) $(tests_tcp_shutdown_LDADD) $(LIBS)
tests/term.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/term$(EXEEXT): $(tests_term_OBJECTS) $(tests_term_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/term$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_term_OBJECTS) $(tests_term_LDADD) $(LIBS)
tests/timeo.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/timeo$(EXEEXT): $(tests_timeo_OBJECTS) $(tests_timeo_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/timeo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_timeo_OBJECTS) $(tests_timeo_LDADD) $(LIBS)
tests/trie.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/trie$(EXEEXT): $(tests_trie_OBJECTS) $(tests_trie_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/trie$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_trie_OBJECTS) $(tests_trie_LDADD) $(LIBS)
tests/zerocopy.$(OBJEXT): tests/$(am__dirstamp) \
	tests/$(DEPDIR)/$(am__dirstamp)
tests/zerocopy$(EXEEXT): $(tests_zerocopy_OBJECTS) $(tests_zerocopy_DEPENDENCIES) tests/$(am__dirstamp)
	@rm -f tests/zerocopy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tests_zerocopy_OBJECTS) $(tests_zerocopy_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f perf/inproc_lat.$(OBJEXT)
	-rm -f perf/inproc_thr.$(OBJEXT)
	-rm -f perf/local_lat.$(OBJEXT)
	-rm -f perf/local_thr.$(OBJEXT)
	-rm -f perf/remote_lat.$(OBJEXT)
	-rm -f perf/remote_thr.$(OBJEXT)
	-rm -f src/aio/ctx.$(OBJEXT)
	-rm -f src/aio/ctx.lo
	-rm -f src/aio/fsm.$(OBJEXT)
	-rm -f src/aio/fsm.lo
	-rm -f src/aio/poller.$(OBJEXT)
	-rm -f src/aio/poller.lo
	-rm -f src/aio/pool.$(OBJEXT)
	-rm -f src/aio/pool.lo
	-rm -f src/aio/timer.$(OBJEXT)
	-rm -f src/aio/timer.lo
	-rm -f src/aio/timerset.$(OBJEXT)
	-rm -f src/aio/timerset.lo
	-rm -f src/aio/usock.$(OBJEXT)
	-rm -f src/aio/usock.lo
	-rm -f src/aio/worker.$(OBJEXT)
	-rm -f src/aio/worker.lo
	-rm -f src/core/device.$(OBJEXT)
	-rm -f src/core/device.lo
	-rm -f src/core/ep.$(OBJEXT)
	-rm -f src/core/ep.lo
	-rm -f src/core/epbase.$(OBJEXT)
	-rm -f src/core/epbase.lo
	-rm -f src/core/global.$(OBJEXT)
	-rm -f src/core/global.lo
	-rm -f src/core/pipe.$(OBJEXT)
	-rm -f src/core/pipe.lo
	-rm -f src/core/poll.$(OBJEXT)
	-rm -f src/core/poll.lo
	-rm -f src/core/sock.$(OBJEXT)
	-rm -f src/core/sock.lo
	-rm -f src/core/sockbase.$(OBJEXT)
	-rm -f src/core/sockbase.lo
	-rm -f src/core/symbol.$(OBJEXT)
	-rm -f src/core/symbol.lo
	-rm -f src/protocols/bus/bus.$(OBJEXT)
	-rm -f src/protocols/bus/bus.lo
	-rm -f src/protocols/bus/xbus.$(OBJEXT)
	-rm -f src/protocols/bus/xbus.lo
	-rm -f src/protocols/pair/pair.$(OBJEXT)
	-rm -f src/protocols/pair/pair.lo
	-rm -f src/protocols/pair/xpair.$(OBJEXT)
	-rm -f src/protocols/pair/xpair.lo
	-rm -f src/protocols/pipeline/pull.$(OBJEXT)
	-rm -f src/protocols/pipeline/pull.lo
	-rm -f src/protocols/pipeline/push.$(OBJEXT)
	-rm -f src/protocols/pipeline/push.lo
	-rm -f src/protocols/pipeline/xpull.$(OBJEXT)
	-rm -f src/protocols/pipeline/xpull.lo
	-rm -f src/protocols/pipeline/xpush.$(OBJEXT)
	-rm -f src/protocols/pipeline/xpush.lo
	-rm -f src/protocols/pubsub/pub.$(OBJEXT)
	-rm -f src/protocols/pubsub/pub.lo
	-rm -f src/protocols/pubsub/sub.$(OBJEXT)
	-rm -f src/protocols/pubsub/sub.lo
	-rm -f src/protocols/pubsub/trie.$(OBJEXT)
	-rm -f src/protocols/pubsub/trie.lo
	-rm -f src/protocols/pubsub/xpub.$(OBJEXT)
	-rm -f src/protocols/pubsub/xpub.lo
	-rm -f src/protocols/pubsub/xsub.$(OBJEXT)
	-rm -f src/protocols/pubsub/xsub.lo
	-rm -f src/protocols/reqrep/rep.$(OBJEXT)
	-rm -f src/protocols/reqrep/rep.lo
	-rm -f src/protocols/reqrep/req.$(OBJEXT)
	-rm -f src/protocols/reqrep/req.lo
	-rm -f src/protocols/reqrep/xrep.$(OBJEXT)
	-rm -f src/protocols/reqrep/xrep.lo
	-rm -f src/protocols/reqrep/xreq.$(OBJEXT)
	-rm -f src/protocols/reqrep/xreq.lo
	-rm -f src/protocols/survey/respondent.$(OBJEXT)
	-rm -f src/protocols/survey/respondent.lo
	-rm -f src/protocols/survey/surveyor.$(OBJEXT)
	-rm -f src/protocols/survey/surveyor.lo
	-rm -f src/protocols/survey/xrespondent.$(OBJEXT)
	-rm -f src/protocols/survey/xrespondent.lo
	-rm -f src/protocols/survey/xsurveyor.$(OBJEXT)
	-rm -f src/protocols/survey/xsurveyor.lo
	-rm -f src/protocols/utils/dist.$(OBJEXT)
	-rm -f src/protocols/utils/dist.lo
	-rm -f src/protocols/utils/excl.$(OBJEXT)
	-rm -f src/protocols/utils/excl.lo
	-rm -f src/protocols/utils/fq.$(OBJEXT)
	-rm -f src/protocols/utils/fq.lo
	-rm -f src/protocols/utils/lb.$(OBJEXT)
	-rm -f src/protocols/utils/lb.lo
	-rm -f src/protocols/utils/priolist.$(OBJEXT)
	-rm -f src/protocols/utils/priolist.lo
	-rm -f src/transports/inproc/binproc.$(OBJEXT)
	-rm -f src/transports/inproc/binproc.lo
	-rm -f src/transports/inproc/cinproc.$(OBJEXT)
	-rm -f src/transports/inproc/cinproc.lo
	-rm -f src/transports/inproc/inproc.$(OBJEXT)
	-rm -f src/transports/inproc/inproc.lo
	-rm -f src/transports/inproc/ins.$(OBJEXT)
	-rm -f src/transports/inproc/ins.lo
	-rm -f src/transports/inproc/msgqueue.$(OBJEXT)
	-rm -f src/transports/inproc/msgqueue.lo
	-rm -f src/transports/inproc/sinproc.$(OBJEXT)
	-rm -f src/transports/inproc/sinproc.lo
	-rm -f src/transports/ipc/aipc.$(OBJEXT)
	-rm -f src/transports/ipc/aipc.lo
	-rm -f src/transports/ipc/bipc.$(OBJEXT)
	-rm -f src/transports/ipc/bipc.lo
	-rm -f src/transports/ipc/cipc.$(OBJEXT)
	-rm -f src/transports/ipc/cipc.lo
	-rm -f src/transports/ipc/ipc.$(OBJEXT)
	-rm -f src/transports/ipc/ipc.lo
	-rm -f src/transports/ipc/sipc.$(OBJEXT)
	-rm -f src/transports/ipc/sipc.lo
	-rm -f src/transports/tcp/atcp.$(OBJEXT)
	-rm -f src/transports/tcp/atcp.lo
	-rm -f src/transports/tcp/btcp.$(OBJEXT)
	-rm -f src/transports/tcp/btcp.lo
	-rm -f src/transports/tcp/ctcp.$(OBJEXT)
	-rm -f src/transports/tcp/ctcp.lo
	-rm -f src/transports/tcp/stcp.$(OBJEXT)
	-rm -f src/transports/tcp/stcp.lo
	-rm -f src/transports/tcp/tcp.$(OBJEXT)
	-rm -f src/transports/tcp/tcp.lo
	-rm -f src/transports/utils/backoff.$(OBJEXT)
	-rm -f src/transports/utils/backoff.lo
	-rm -f src/transports/utils/dns.$(OBJEXT)
	-rm -f src/transports/utils/dns.lo
	-rm -f src/transports/utils/iface.$(OBJEXT)
	-rm -f src/transports/utils/iface.lo
	-rm -f src/transports/utils/literal.$(OBJEXT)
	-rm -f src/transports/utils/literal.lo
	-rm -f src/transports/utils/port.$(OBJEXT)
	-rm -f src/transports/utils/port.lo
	-rm -f src/transports/utils/streamhdr.$(OBJEXT)
	-rm -f src/transports/utils/streamhdr.lo
	-rm -f src/utils/alloc.$(OBJEXT)
	-rm -f src/utils/alloc.lo
	-rm -f src/utils/atomic.$(OBJEXT)
	-rm -f src/utils/atomic.lo
	-rm -f src/utils/chunk.$(OBJEXT)
	-rm -f src/utils/chunk.lo
	-rm -f src/utils/chunkref.$(OBJEXT)
	-rm -f src/utils/chunkref.lo
	-rm -f src/utils/clock.$(OBJEXT)
	-rm -f src/utils/clock.lo
	-rm -f src/utils/closefd.$(OBJEXT)
	-rm -f src/utils/closefd.lo
	-rm -f src/utils/efd.$(OBJEXT)
	-rm -f src/utils/efd.lo
	-rm -f src/utils/err.$(OBJEXT)
	-rm -f src/utils/err.lo
	-rm -f src/utils/glock.$(OBJEXT)
	-rm -f src/utils/glock.lo
	-rm -f src/utils/hash.$(OBJEXT)
	-rm -f src/utils/hash.lo
	-rm -f src/utils/list.$(OBJEXT)
	-rm -f src/utils/list.lo
	-rm -f src/utils/msg.$(OBJEXT)
	-rm -f src/utils/msg.lo
	-rm -f src/utils/mutex.$(OBJEXT)
	-rm -f src/utils/mutex.lo
	-rm -f src/utils/queue.$(OBJEXT)
	-rm -f src/utils/queue.lo
	-rm -f src/utils/random.$(OBJEXT)
	-rm -f src/utils/random.lo
	-rm -f src/utils/sem.$(OBJEXT)
	-rm -f src/utils/sem.lo
	-rm -f src/utils/sleep.$(OBJEXT)
	-rm -f src/utils/sleep.lo
	-rm -f src/utils/stopwatch.$(OBJEXT)
	-rm -f src/utils/stopwatch.lo
	-rm -f src/utils/thread.$(OBJEXT)
	-rm -f src/utils/thread.lo
	-rm -f src/utils/wire.$(OBJEXT)
	-rm -f src/utils/wire.lo
	-rm -f tests/block.$(OBJEXT)
	-rm -f tests/bus.$(OBJEXT)
	-rm -f tests/device.$(OBJEXT)
	-rm -f tests/domain.$(OBJEXT)
	-rm -f tests/emfile.$(OBJEXT)
	-rm -f tests/hash.$(OBJEXT)
	-rm -f tests/inproc.$(OBJEXT)
	-rm -f tests/inproc_shutdown.$(OBJEXT)
	-rm -f tests/iovec.$(OBJEXT)
	-rm -f tests/ipc.$(OBJEXT)
	-rm -f tests/ipc_shutdown.$(OBJEXT)
	-rm -f tests/list.$(OBJEXT)
	-rm -f tests/msg.$(OBJEXT)
	-rm -f tests/pair.$(OBJEXT)
	-rm -f tests/pipeline.$(OBJEXT)
	-rm -f tests/poll.$(OBJEXT)
	-rm -f tests/prio.$(OBJEXT)
	-rm -f tests/pubsub.$(OBJEXT)
	-rm -f tests/reqrep.$(OBJEXT)
	-rm -f tests/separation.$(OBJEXT)
	-rm -f tests/shutdown.$(OBJEXT)
	-rm -f tests/survey.$(OBJEXT)
	-rm -f tests/symbol.$(OBJEXT)
	-rm -f tests/tcp.$(OBJEXT)
	-rm -f tests/tcp_shutdown.$(OBJEXT)
	-rm -f tests/term.$(OBJEXT)
	-rm -f tests/timeo.$(OBJEXT)
	-rm -f tests/trie.$(OBJEXT)
	-rm -f tests/zerocopy.$(OBJEXT)
	-rm -f tools/nanocat.$(OBJEXT)
	-rm -f tools/options.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/inproc_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/inproc_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/local_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/local_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/remote_lat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@perf/$(DEPDIR)/remote_thr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/ctx.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/fsm.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/poller.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/pool.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/timerset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/usock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/aio/$(DEPDIR)/worker.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/device.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/ep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/epbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/global.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/pipe.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/poll.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/sock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/sockbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/core/$(DEPDIR)/symbol.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/bus/$(DEPDIR)/bus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/bus/$(DEPDIR)/xbus.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pair/$(DEPDIR)/pair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pair/$(DEPDIR)/xpair.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/pull.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/push.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/xpull.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pipeline/$(DEPDIR)/xpush.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/pub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/sub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/trie.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/xpub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/pubsub/$(DEPDIR)/xsub.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/rep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/req.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/xrep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/reqrep/$(DEPDIR)/xreq.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/respondent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/surveyor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/xrespondent.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/survey/$(DEPDIR)/xsurveyor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/dist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/excl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/fq.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/lb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/protocols/utils/$(DEPDIR)/priolist.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/binproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/cinproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/inproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/ins.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/msgqueue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/inproc/$(DEPDIR)/sinproc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/aipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/bipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/cipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/ipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/ipc/$(DEPDIR)/sipc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/atcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/btcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/ctcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/stcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/tcp/$(DEPDIR)/tcp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/backoff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/dns.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/iface.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/literal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/port.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/transports/utils/$(DEPDIR)/streamhdr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/alloc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/atomic.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/chunk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/chunkref.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/clock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/closefd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/efd.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/err.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/glock.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/list.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/msg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/mutex.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/queue.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/random.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/sem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/sleep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/stopwatch.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/thread.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/utils/$(DEPDIR)/wire.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/block.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/bus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/device.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/domain.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/emfile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/inproc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/inproc_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/iovec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/ipc_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/msg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pipeline.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/poll.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/prio.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/pubsub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/reqrep.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/separation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/survey.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/symbol.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/tcp_shutdown.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/term.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/timeo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/trie.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/zerocopy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/nanocat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/options.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf perf/.libs perf/_libs
	-rm -rf src/aio/.libs src/aio/_libs
	-rm -rf src/core/.libs src/core/_libs
	-rm -rf src/protocols/bus/.libs src/protocols/bus/_libs
	-rm -rf src/protocols/pair/.libs src/protocols/pair/_libs
	-rm -rf src/protocols/pipeline/.libs src/protocols/pipeline/_libs
	-rm -rf src/protocols/pubsub/.libs src/protocols/pubsub/_libs
	-rm -rf src/protocols/reqrep/.libs src/protocols/reqrep/_libs
	-rm -rf src/protocols/survey/.libs src/protocols/survey/_libs
	-rm -rf src/protocols/utils/.libs src/protocols/utils/_libs
	-rm -rf src/transports/inproc/.libs src/transports/inproc/_libs
	-rm -rf src/transports/ipc/.libs src/transports/ipc/_libs
	-rm -rf src/transports/tcp/.libs src/transports/tcp/_libs
	-rm -rf src/transports/utils/.libs src/transports/utils/_libs
	-rm -rf src/utils/.libs src/utils/_libs
	-rm -rf tests/.libs tests/_libs

distclean-libtool:
	-rm -f libtool config.lt
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man1dir)" || $(MKDIR_P) "$(DESTDIR)$(man1dir)"
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man1dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man1dir)" && rm -f $$files; }
install-man3: $(dist_man3_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man3dir)" || $(MKDIR_P) "$(DESTDIR)$(man3dir)"
	@list='$(dist_man3_MANS)'; test -n "$(man3dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^3][0-9a-z]*$$,3,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man3dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man3dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man3dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man3dir)" || exit $$?; }; \
	done; }

uninstall-man3:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man3_MANS)'; test -n "$(man3dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^3][0-9a-z]*$$,3,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man3dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man3dir)" && rm -f $$files; }
install-man7: $(dist_man7_MANS)
	@$(NORMAL_INSTALL)
	test -z "$(man7dir)" || $(MKDIR_P) "$(DESTDIR)$(man7dir)"
	@list='$(dist_man7_MANS)'; test -n "$(man7dir)" || exit 0; \
	{ for i in $$list; do echo "$$i"; done; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^7][0-9a-z]*$$,7,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man7dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man7dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man7dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man7dir)" || exit $$?; }; \
	done; }

uninstall-man7:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man7_MANS)'; test -n "$(man7dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^7][0-9a-z]*$$,7,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	test -z "$$files" || { \
	  echo " ( cd '$(DESTDIR)$(man7dir)' && rm -f" $$files ")"; \
	  cd "$(DESTDIR)$(man7dir)" && rm -f $$files; }
install-docDATA: $(doc_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(docdir)" || $(MKDIR_P) "$(DESTDIR)$(docdir)"
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(docdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(docdir)" && rm -f $$files
install-pkgconfigDATA: $(pkgconfig_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(pkgconfigdir)" || $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)"
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
	done

uninstall-pkgconfigDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(pkgconfigdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(pkgconfigdir)" && rm -f $$files
install-nnincludeHEADERS: $(nninclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(nnincludedir)" || $(MKDIR_P) "$(DESTDIR)$(nnincludedir)"
	@list='$(nninclude_HEADERS)'; test -n "$(nnincludedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(nnincludedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(nnincludedir)" || exit $$?; \
	done

uninstall-nnincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nninclude_HEADERS)'; test -n "$(nnincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(nnincludedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(nnincludedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@list='$(MANS)'; if test -n "$$list"; then \
	  list=`for p in $$list; do \
	    if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	    if test -f "$$d$$p"; then echo "$$d$$p"; else :; fi; done`; \
	  if test -n "$$list" && \
	    grep 'ab help2man is required to generate this page' $$list >/dev/null; then \
	    echo "error: found man pages containing the \`missing help2man' replacement text:" >&2; \
	    grep -l 'ab help2man is required to generate this page' $$list | sed 's/^/         /' >&2; \
	    echo "       to fix them, install help2man, remove and regenerate the man pages;" >&2; \
	    echo "       typically \`make maintainer-clean' will remove them" >&2; \
	    exit 1; \
	  else :; fi; \
	else :; fi
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)
dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod u+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(MANS) $(DATA) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man3dir)" "$(DESTDIR)$(man7dir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(pkgconfigdir)" "$(DESTDIR)$(nnincludedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f perf/$(DEPDIR)/$(am__dirstamp)
	-rm -f perf/$(am__dirstamp)
	-rm -f src/aio/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/aio/$(am__dirstamp)
	-rm -f src/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/core/$(am__dirstamp)
	-rm -f src/protocols/bus/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/bus/$(am__dirstamp)
	-rm -f src/protocols/pair/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pair/$(am__dirstamp)
	-rm -f src/protocols/pipeline/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pipeline/$(am__dirstamp)
	-rm -f src/protocols/pubsub/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/pubsub/$(am__dirstamp)
	-rm -f src/protocols/reqrep/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/reqrep/$(am__dirstamp)
	-rm -f src/protocols/survey/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/survey/$(am__dirstamp)
	-rm -f src/protocols/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/protocols/utils/$(am__dirstamp)
	-rm -f src/transports/inproc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/inproc/$(am__dirstamp)
	-rm -f src/transports/ipc/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/ipc/$(am__dirstamp)
	-rm -f src/transports/tcp/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/tcp/$(am__dirstamp)
	-rm -f src/transports/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/transports/utils/$(am__dirstamp)
	-rm -f src/utils/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/utils/$(am__dirstamp)
	-rm -f tests/$(DEPDIR)/$(am__dirstamp)
	-rm -f tests/$(am__dirstamp)
	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
	-rm -f tools/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@NANOCAT_FALSE@install-exec-hook:
@SYMLINKS_FALSE@install-exec-hook:
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf perf/$(DEPDIR) src/aio/$(DEPDIR) src/core/$(DEPDIR) src/protocols/bus/$(DEPDIR) src/protocols/pair/$(DEPDIR) src/protocols/pipeline/$(DEPDIR) src/protocols/pubsub/$(DEPDIR) src/protocols/reqrep/$(DEPDIR) src/protocols/survey/$(DEPDIR) src/protocols/utils/$(DEPDIR) src/transports/inproc/$(DEPDIR) src/transports/ipc/$(DEPDIR) src/transports/tcp/$(DEPDIR) src/transports/utils/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-docDATA install-man install-nnincludeHEADERS \
	install-pkgconfigDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1 install-man3 install-man7

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf perf/$(DEPDIR) src/aio/$(DEPDIR) src/core/$(DEPDIR) src/protocols/bus/$(DEPDIR) src/protocols/pair/$(DEPDIR) src/protocols/pipeline/$(DEPDIR) src/protocols/pubsub/$(DEPDIR) src/protocols/reqrep/$(DEPDIR) src/protocols/survey/$(DEPDIR) src/protocols/utils/$(DEPDIR) src/transports/inproc/$(DEPDIR) src/transports/ipc/$(DEPDIR) src/transports/tcp/$(DEPDIR) src/transports/utils/$(DEPDIR) src/utils/$(DEPDIR) tests/$(DEPDIR) tools/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-docDATA \
	uninstall-libLTLIBRARIES uninstall-man \
	uninstall-nnincludeHEADERS uninstall-pkgconfigDATA

uninstall-man: uninstall-man1 uninstall-man3 uninstall-man7

.MAKE: check-am install-am install-exec-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-TESTS check-am \
	clean clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libLTLIBRARIES clean-libtool clean-noinstPROGRAMS ctags \
	dist dist-all dist-bzip2 dist-gzip dist-hook dist-lzma \
	dist-shar dist-tarZ dist-xz dist-zip distcheck distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am \
	install-docDATA install-dvi install-dvi-am install-exec \
	install-exec-am install-exec-hook install-html install-html-am \
	install-info install-info-am install-libLTLIBRARIES \
	install-man install-man1 install-man3 install-man7 \
	install-nnincludeHEADERS install-pdf install-pdf-am \
	install-pkgconfigDATA install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-docDATA uninstall-libLTLIBRARIES uninstall-man \
	uninstall-man1 uninstall-man3 uninstall-man7 \
	uninstall-nnincludeHEADERS uninstall-pkgconfigDATA


#  Build instructions.

@DOC_TRUE@.txt.xml:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b docbook \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<
@DOC_TRUE@.xml.1:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<
@DOC_TRUE@.xml.3:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<
@DOC_TRUE@.xml.7:
@DOC_TRUE@	$(AM_V_GEN)$(XMLTO) -o doc man $<

@DOC_TRUE@.txt.1.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

@DOC_TRUE@.txt.3.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

@DOC_TRUE@.txt.7.html:
@DOC_TRUE@	$(AM_V_GEN)$(ASCIIDOC) -d manpage -b xhtml11 \
@DOC_TRUE@        -a stylesheet=$(abs_srcdir)/doc/htmldoc.css \
@DOC_TRUE@        -f $(abs_srcdir)/doc/asciidoc.conf \
@DOC_TRUE@        -aversion=@NN_PACKAGE_VERSION@ -o $@ $<

################################################################################
#  additional packaging-related stuff                                          #
################################################################################

#  Generate ChangeLog file from git.
#  Also, there's no git availabe when building from the source package and
#  thus no way to obtain package version. Therefore, package version is
#  saved into a file when building a source package.
dist-hook:
	@if test -d "$(srcdir)/.git"; \
	then \
		echo Creating ChangeLog; \
		cd "$(top_srcdir)"; \
		(echo '# Generated by Makefile. Do not edit.'; echo; \
		  ./missing --run git log --decorate ) > ChangeLog.tmp; \
		mv -f ChangeLog.tmp $(top_distdir)/ChangeLog; \
		rm -f ChangeLog.tmp; \
    else \
        cp -f ChangeLog $(top_distdir)/ChangeLog || \
        echo Failed to generate ChangeLog >&2; \
	fi; \
	$(srcdir)/package_version.sh > $(distdir)/.version

@NANOCAT_TRUE@@SYMLINKS_TRUE@install-exec-hook:
@NANOCAT_TRUE@@SYMLINKS_TRUE@	cd $(DESTDIR)$(bindir) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_push$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pull$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pub$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_sub$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_req$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_rep$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_surveyor$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_respondent$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_bus$(EXEEXT) && \
@NANOCAT_TRUE@@SYMLINKS_TRUE@          $(LN_S) -f nanocat nn_pair$(EXEEXT)

diagrams:
	-mkdir -p doc/diagrams
	./doc/diag.py $(DEFS) $(CPPFLAGS) \
		$(shell clang -E - -v < /dev/null 2>&1 | \
			sed -n '/#include </{:x;n;/^End/q;s/^ */-I/;p;bx}')

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
