DPDK_2.0 {
	global:

	__rte_panic;
	devargs_list;
	eal_parse_sysfs_value;
	eal_timer_source;
	lcore_config;
	pci_device_list;
	pci_driver_list;
	per_lcore__lcore_id;
	per_lcore__rte_errno;
	rte_cpu_check_supported;
	rte_cpu_get_flag_enabled;
	rte_cycles_vmware_tsc_map;
	rte_delay_us;
	rte_dump_physmem_layout;
	rte_dump_registers;
	rte_dump_stack;
	rte_dump_tailq;
	rte_eal_alarm_cancel;
	rte_eal_alarm_set;
	rte_eal_dev_init;
	rte_eal_devargs_add;
	rte_eal_devargs_dump;
	rte_eal_devargs_type_count;
	rte_eal_driver_register;
	rte_eal_driver_unregister;
	rte_eal_get_configuration;
	rte_eal_get_lcore_state;
	rte_eal_get_physmem_layout;
	rte_eal_get_physmem_size;
	rte_eal_has_hugepages;
	rte_eal_hpet_init;
	rte_eal_init;
	rte_eal_iopl_init;
	rte_eal_lcore_role;
	rte_eal_mp_remote_launch;
	rte_eal_mp_wait_lcore;
	rte_eal_parse_devargs_str;
	rte_eal_pci_close_one;
	rte_eal_pci_dump;
	rte_eal_pci_probe;
	rte_eal_pci_probe_one;
	rte_eal_pci_register;
	rte_eal_pci_scan;
	rte_eal_pci_unregister;
	rte_eal_process_type;
	rte_eal_remote_launch;
	rte_eal_tailq_lookup;
	rte_eal_tailq_register;
	rte_eal_vdev_init;
	rte_eal_vdev_uninit;
	rte_eal_wait_lcore;
	rte_exit;
	rte_get_hpet_cycles;
	rte_get_hpet_hz;
	rte_get_tsc_hz;
	rte_hexdump;
	rte_intr_callback_register;
	rte_intr_callback_unregister;
	rte_intr_disable;
	rte_intr_enable;
	rte_log;
	rte_log_add_in_history;
	rte_log_cur_msg_loglevel;
	rte_log_cur_msg_logtype;
	rte_log_dump_history;
	rte_log_set_history;
	rte_logs;
	rte_mem_lock_page;
	rte_mem_phy2mch;
	rte_mem_virt2phy;
	rte_memdump;
	rte_memory_get_nchannel;
	rte_memory_get_nrank;
	rte_memzone_dump;
	rte_memzone_lookup;
	rte_memzone_reserve;
	rte_memzone_reserve_aligned;
	rte_memzone_reserve_bounded;
	rte_memzone_walk;
	rte_openlog_stream;
	rte_set_application_usage_hook;
	rte_set_log_level;
	rte_set_log_type;
	rte_snprintf;
	rte_socket_id;
	rte_strerror;
	rte_strsplit;
	rte_sys_gettid;
	rte_thread_get_affinity;
	rte_thread_set_affinity;
	rte_vlog;
	rte_xen_dom0_memory_attach;
	rte_xen_dom0_memory_init;
	test_mp_secondary;

	local: *;
};
