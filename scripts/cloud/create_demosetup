#! /bin/bash

# 
# (c) Copyright RIFT.io, 2013-2016, All Rights Reserved
#
# Author(s): Anil Gunturu
# Creation Date: 07/24/2014
# 

# This script is used for automating the installation of openstack
# on the demo setup. This script also launches the necessary VMs for
# the demo setup

set -e

function print_usage() {
    echo "Usage: $0"
    echo "       Optional arguments"
    echo "       -u|--unstack Uninstall openstack"
    echo "       -l|--launch-vms Launch VMs"
    echo "       -s|--setup-openstack Setup openstack"
    echo "       -c|--cleanup-openstack Delete quotas and flavors"
    echo "       --cleanup-seagull Delete seagull setup"
    echo "       --setup-seagull Setup seagull"
    echo "       --launch-seagull Launch seagull VMs"
    echo "       --cleanup-trafgen Only delete trafgen setup"
    echo "       --setup-trafgen Only setup trafgen"
    echo "       --launch-trafgen Launch trafgen VMs"
    exit 1
}

function cleanup_seagull() {
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        $CLOUDTOOL vm destroy -n rw_seagull_client_vm3
        $CLOUDTOOL vm destroy -n rw_seagull_client_vm2
        $CLOUDTOOL vm destroy -n rw_seagull_client_vm1
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm7
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm6
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm5
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm4
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm3
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm2
        $CLOUDTOOL vm destroy -n rw_seagull_server_vm1
        $CLOUDTOOL vm destroy -n rw_seagull_client_lead_vm1
        $CLOUDTOOL vm destroy -n rw_seagull_server_lead_vm1
        $CLOUDTOOL vm destroy -n rw_seagull_mgmt_vm2
        $CLOUDTOOL vm destroy -n rw_seagull_mgmt_vm1

        $CLOUDTOOL hostagg delete -n rw.hostagg.seagull_master -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.seagull_server_lead -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.seagull_server -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.seagull_client_lead -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.seagull_client -f

        $CLOUDTOOL flavor delete -n rw.seagull_master
        $CLOUDTOOL flavor delete -n rw.seagull_server_lead
        $CLOUDTOOL flavor delete -n rw.seagull_server.large
        $CLOUDTOOL flavor delete -n rw.seagull_client_lead
        $CLOUDTOOL flavor delete -n rw.seagull_client.xlarge
        $CLOUDTOOL flavor delete -n rw.seagull_server_lead.large
        $CLOUDTOOL flavor delete -n rw.seagull_client_lead.xlarge
    "
}

function cleanup_trafgen() {
    # Delete the host aggregates
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        $CLOUDTOOL vm destroy -n rw_destnat_fpctrl_vm4
        $CLOUDTOOL vm destroy -n rw_destnat_fpctrl_vm3
        $CLOUDTOOL vm destroy -n rw_destnat_mgmt_vm2
        $CLOUDTOOL vm destroy -n rw_destnat_mgmt_vm1
        $CLOUDTOOL vm destroy -n rw_destnat_fpctrl_vm2
        $CLOUDTOOL vm destroy -n rw_destnat_fpctrl_vm1
        $CLOUDTOOL vm destroy -n rw_destnat_lb_vm3
        $CLOUDTOOL vm destroy -n rw_destnat_lb_vm2
        $CLOUDTOOL vm destroy -n rw_destnat_lb_vm1
        $CLOUDTOOL vm destroy -n rw_destnat_trafgen_vm1
        $CLOUDTOOL vm destroy -n rw_destnat_trafsink_vm3
        $CLOUDTOOL vm destroy -n rw_destnat_trafsink_vm2
        $CLOUDTOOL vm destroy -n rw_destnat_trafsink_vm1

        $CLOUDTOOL hostagg delete -n rw.hostagg.destnat_trafgen -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.destnat_lb -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.destnat_trafsink -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.destnat_trafgen_lead -f
        $CLOUDTOOL hostagg delete -n rw.hostagg.destnat_trafgen_master -f

        $CLOUDTOOL flavor delete -n rw.destnat_lb.xlarge
        $CLOUDTOOL flavor delete -n rw.destnat_trafgen_lead
        $CLOUDTOOL flavor delete -n rw.destnat_trafsink.xlarge
        $CLOUDTOOL flavor delete -n rw.destnat_trafgen.xlarge
        $CLOUDTOOL flavor delete -n rw.destnat_trafgen_master
    "
}

##
# This function deletes the current openstack configuration
# Specifically deletes hostaggregates, flavors etc
##
function cleanup_openstack() {

    cleanup_trafgen
    cleanup_seagull
 
    # Delete the host aggregates
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
    #     # delete all the VMs
    #     $CLOUDTOOL vm destroy -a

    #     # delete all host aggregates
    #     $CLOUDTOOL hostagg list | grep 'rw.' | awk '{print \$1}' |
    #     while read agg; do
    #         echo Deleting host aggregate \$agg
    #         $CLOUDTOOL hostagg delete -n \$agg -f
    #     done

    #     # delete all flavors
    #     $CLOUDTOOL flavor list | grep 'rw.' | awk '{print \$1}' |
    #     while read f; do
    #         echo Deleting flavor \$f
    #         $CLOUDTOOL flavor delete -n \$f
    #     done

         # delete the image
         $CLOUDTOOL -u admin image delete -n rwopenstack_vm
    "
}

function setup_trafgen() {
    # Setup the host aggregates for destnat demo
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        # Create the flavors
        # For this flavor all the 12 10G ports are connected to the same switch.
        # This flavor is typically used by traffic generators.
        $CLOUDTOOL hostagg create -n rw.hostagg.destnat_trafgen -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.destnat_trafgen -d TRAFGEN_PCI12=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafgen -c grunt12.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.destnat_trafgen.xlarge -m 32768 -d 8 -v 20 -p 12 -e TRAFGEN_PCI12=1

        # For this flavor 6 10G ports are connected to one switch,
        # and other 6 are connected to another. This flavor is typically
        # used by load balancers
        $CLOUDTOOL hostagg create -n rw.hostagg.destnat_lb -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.destnat_lb -d LB_PCI12=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_lb -c grunt9.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_lb -c grunt10.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_lb -c grunt11.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.destnat_lb.xlarge -m 32768 -d 8 -v 20 -p 12 -e LB_PCI12=1

        $CLOUDTOOL hostagg create -n rw.hostagg.destnat_trafsink -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.destnat_trafsink -d TRAFSINK_PCI12=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafsink -c grunt3.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafsink -c grunt4.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafsink -c grunt5.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.destnat_trafsink.xlarge -m 32768 -d 8 -v 20 -p 12 -e TRAFSINK_PCI12=1

        $CLOUDTOOL hostagg create -n rw.hostagg.destnat_trafgen_lead -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.destnat_trafgen_lead -d TRAFGEN_LEAD_PCI01=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafgen_lead -c grunt1.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.destnat_trafgen_lead -m 8192 -d 8 -v 2 -p 1 -e TRAFGEN_LEAD_PCI01=1

        $CLOUDTOOL hostagg create -n rw.hostagg.destnat_trafgen_master -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.destnat_trafgen_master -d TRAFGEN_MASTER=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.destnat_trafgen_master -c grunt1.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.destnat_trafgen_master -m 8192 -d 8 -v 2 -e TRAFGEN_MASTER=1
        "
}

function setup_seagull() {
    # Setup the host aggregates for seagull demo
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        $CLOUDTOOL hostagg create -n rw.hostagg.seagull_master -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.seagull_master -d SG_MASTER_NOPCI=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_master -c grunt14.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.seagull_master -m 8192 -d 8 -v 2 -e SG_MASTER_NOPCI=1

        $CLOUDTOOL hostagg create -n rw.hostagg.seagull_server_lead -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.seagull_server_lead -d SG_SERVER_LEAD_PCI02=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server_lead -c grunt14.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.seagull_server_lead.large -m 32768 -d 8 -v 12 -p 2 -e SG_SERVER_LEAD_PCI02=1

        $CLOUDTOOL hostagg create -n rw.hostagg.seagull_server -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.seagull_server -d SG_SERVER_PCI01=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt15.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt16.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt17.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt18.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt19.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_server -c grunt20.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.seagull_server.large -m 32768 -d 8 -v 12 -p 1 -e SG_SERVER_PCI01=1

        $CLOUDTOOL hostagg create -n rw.hostagg.seagull_client_lead -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.seagull_client_lead -d SG_CLIENT_LEAD_PCI02=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_client_lead -c grunt6.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.seagull_client_lead.xlarge -m 32768 -d 8 -v 20 -p 2 -e SG_CLIENT_LEAD_PCI02=1

        $CLOUDTOOL hostagg create -n rw.hostagg.seagull_client -a nova
        $CLOUDTOOL hostagg setmetadata -n rw.hostagg.seagull_client -d SG_CLIENT_PCI01=1
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_client -c grunt7.eng.riftio.com
        $CLOUDTOOL hostagg addhost -n rw.hostagg.seagull_client -c grunt8.eng.riftio.com
        $CLOUDTOOL flavor create -n rw.seagull_client.xlarge -m 32768 -d 8 -v 20 -p 1 -e SG_CLIENT_PCI01=1
    "
}

##
# This function setups openstack quotas and flavors
##
function setup_openstack() {
    # Setup quotas, create image, host aggregates and flavors

    # Setup the host aggregates for destnat demo
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        echo 'Creating image $IMAGENAME from $IMAGEFILE'
        $CLOUDTOOL image create -n $IMAGENAME -f $IMAGEFILE

        #cpuset quotas
        echo 'Setting quotas'
        $CLOUDTOOL quota set --project demo --memory 786432 --vcpus 1024 --vms 64 --ips 64
        # set rules
        echo 'Setting rules'
        $CLOUDTOOL rules set || true
        "

     setup_trafgen
     setup_seagull
}

##
# This function lauches the VMs
##
function launch_trafgen() {
    # Launch the VMs for the demo setup

    # Launch the VMs for dest nat application
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        $CLOUDTOOL vm create -n rw_destnat_trafsink_vm1 -i $IMAGENAME -f rw.destnat_trafsink.xlarge
        $CLOUDTOOL vm create -n rw_destnat_trafsink_vm2 -i $IMAGENAME -f rw.destnat_trafsink.xlarge
        $CLOUDTOOL vm create -n rw_destnat_trafsink_vm3 -i $IMAGENAME -f rw.destnat_trafsink.xlarge

        $CLOUDTOOL vm create -n rw_destnat_trafgen_vm1 -i $IMAGENAME -f rw.destnat_trafgen.xlarge
        $CLOUDTOOL vm create -n rw_destnat_lb_vm1 -i $IMAGENAME -f rw.destnat_lb.xlarge
        $CLOUDTOOL vm create -n rw_destnat_lb_vm2 -i $IMAGENAME -f rw.destnat_lb.xlarge
        $CLOUDTOOL vm create -n rw_destnat_lb_vm3 -i $IMAGENAME -f rw.destnat_lb.xlarge

        $CLOUDTOOL vm create -n rw_destnat_fpctrl_vm1 -i $IMAGENAME -f rw.destnat_trafgen_lead
        $CLOUDTOOL vm create -n rw_destnat_fpctrl_vm2 -i $IMAGENAME -f rw.destnat_trafgen_lead
        $CLOUDTOOL vm create -n rw_destnat_fpctrl_vm3 -i $IMAGENAME -f rw.destnat_trafgen_lead
        $CLOUDTOOL vm create -n rw_destnat_fpctrl_vm4 -i $IMAGENAME -f rw.destnat_trafgen_lead

        $CLOUDTOOL vm create -n rw_destnat_mgmt_vm1 -i $IMAGENAME -f rw.destnat_trafgen_master
        $CLOUDTOOL vm create -n rw_destnat_mgmt_vm2 -i $IMAGENAME -f rw.destnat_trafgen_master
    "

}

function launch_seagull() {
    # Launch the VMs for seagull application
    ssh -o StrictHostKeyChecking=no $CONTROLLER_NODE bash -c "
        $CLOUDTOOL vm create -n rw_seagull_mgmt_vm1 -i $IMAGENAME -f rw.seagull_master
        $CLOUDTOOL vm create -n rw_seagull_mgmt_vm2 -i $IMAGENAME -f rw.seagull_master

        $CLOUDTOOL vm create -n rw_seagull_server_lead_vm1 -i $IMAGENAME -f rw.seagull_server_lead.large
        $CLOUDTOOL vm create -n rw_seagull_client_lead_vm1 -i $IMAGENAME -f rw.seagull_client_lead.xlarge

        $CLOUDTOOL vm create -n rw_seagull_server_vm1 -i $IMAGENAME -f rw.seagull_server.large
        $CLOUDTOOL vm create -n rw_seagull_server_vm2 -i $IMAGENAME -f rw.seagull_server.large
        $CLOUDTOOL vm create -n rw_seagull_server_vm3 -i $IMAGENAME -f rw.seagull_server.large
        $CLOUDTOOL vm create -n rw_seagull_server_vm4 -i $IMAGENAME -f rw.seagull_server.large
        $CLOUDTOOL vm create -n rw_seagull_server_vm5 -i $IMAGENAME -f rw.seagull_server.large
        $CLOUDTOOL vm create -n rw_seagull_server_vm6 -i $IMAGENAME -f rw.seagull_server.large

        $CLOUDTOOL vm create -n rw_seagull_client_vm1 -i $IMAGENAME -f rw.seagull_client.xlarge
        $CLOUDTOOL vm create -n rw_seagull_client_vm2 -i $IMAGENAME -f rw.seagull_client.xlarge
    "
}

function launch_vms() {
    launch_trafgen
    launch_seagull
}

# Specify the controller node and compute nodes for OpenStack installation
CONTROLLER_NODE=10.64.1.31
COMPUTE_NODE_LIST=(10.64.1.33 10.64.1.34 10.64.1.35 10.64.1.36 10.64.1.37 10.64.1.38 10.64.1.39 10.64.1.40 10.64.1.41 10.64.1.42 10.64.4.14 10.64.4.15 10.64.4.16 10.64.4.17 10.64.4.18 10.64.4.19 10.64.4.20)

BASEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
DEVSTACK=$BASEDIR/devstack
CLOUDTOOL=$BASEDIR/cloudtool
IMAGENAME=rwopenstack_vm
IMAGEFILE=/net/boson/home1/common/vm/rift-root-current.qcow2
UNSTACK=false
SSH_ROOT=/usr/rift/bin/ssh_root
LAUNCH_VMS=false
SETUP_OPENSTACK=false
CLEANUP_OPENSTACK=false
SETUP_SEAGULL=false
CLEANUP_SEAGULL=false
LAUNCH_SEAGULL=false
SETUP_TRAFGEN=false
CLEANUP_TRAFGEN=false
LAUNCH_TRAFGEN=false

##
# Parse options
##
while [[ $# > 0 ]]
do
key="$1"
shift
case $key in
    -l|--launch-vms)
    LAUNCH_VMS=true
    ;;
    -s|--setup-openstack)
    SETUP_OPENSTACK=true
    ;;
    -c|--cleanup-openstack)
    CLEANUP_OPENSTACK=true
    ;;
    --cleanup-seagull)
    CLEANUP_SEAGULL=true
    ;;
    --setup-seagull)
    SETUP_SEAGULL=true
    ;;
    --launch-seagull)
    LAUNCH_SEAGULL=true
    ;;
    --cleanup-trafgen)
    CLEANUP_TRAFGEN=true
    ;;
    --setup-trafgen)
    SETUP_TRAFGEN=true
    ;;
    --launch-trafgen)
    LAUNCH_TRAFGEN=true
    ;;
    -u|--unstack)
    UNSTACK=true
    ;;
    *)
    print_usage
    ;;
esac
done

# ALL_NODES=("${COMPUTE_NODE_LIST[@]}" $CONTROLLER_NODE)
# for node in ${ALL_NODES[*]}
# do
#     cpus=`$SSH_ROOT $node "lscpu | grep '^CPU(s):' | awk '{print \\$2}'"`
#     public_interface=`$SSH_ROOT $node "ifconfig | grep -B1 $node | grep flags | awk -F ':' '{print \\$1}'"`
#     echo "$node: $public_interface $cpus"
# done

if $UNSTACK; then
    for node in ${COMPUTE_NODE_LIST[*]}
    do
        echo "Uninstalling OpenStack compute on $node"
        $DEVSTACK -h $node -c $CONTROLLER_NODE -u
    done

    echo "Uninstalling OpenStack controller on $CONTROLLER_NODE"
    $DEVSTACK -h $CONTROLLER_NODE -u
elif $LAUNCH_VMS; then
    launch_vms

elif $SETUP_OPENSTACK; then
    setup_openstack

elif $CLEANUP_OPENSTACK; then
    cleanup_openstack

elif $SETUP_SEAGULL; then
    setup_seagull

elif $CLEANUP_SEAGULL; then
    cleanup_seagull

elif $LAUNCH_SEAGULL; then
    launch_seagull

elif $SETUP_TRAFGEN; then
    setup_trafgen

elif $CLEANUP_TRAFGEN; then
    cleanup_trafgen

elif $LAUNCH_TRAFGEN; then
    launch_trafgen

else
    # User requested to install OpenStack
    # First install OpenStack on controller node
    echo "Installing OpenStack controller on $CONTROLLER_NODE"
    PUBLIC_INTERFACE=`$SSH_ROOT $CONTROLLER_NODE "ifconfig | grep -B1 $CONTROLLER_NODE | grep flags | awk -F ':' '{print \\$1}'"`

    if $SSH_ROOT $CONTROLLER_NODE "ifconfig -a | grep -q ens2f1" ; then
        FLAT_INTERFACE=ens2f1
    else
        FLAT_INTERFACE=eno1
    fi
    echo "$DEVSTACK -h $CONTROLLER_NODE -p $PUBLIC_INTERFACE -f $FLAT_INTERFACE"
    $DEVSTACK -h $CONTROLLER_NODE -p $PUBLIC_INTERFACE -f $FLAT_INTERFACE

    # Install OpenStack on compute nodes
    for node in ${COMPUTE_NODE_LIST[*]}
    do
        PUBLIC_INTERFACE=`$SSH_ROOT $node "ifconfig | grep -B1 $node | grep flags | awk -F ':' '{print \\$1}'"`
        if $SSH_ROOT $node "ifconfig -a | grep -q ens2f1" ; then
            FLAT_INTERFACE=ens2f1
        else
            FLAT_INTERFACE=eno1
        fi
        echo "Installing OpenStack compute on $node"
        echo "$DEVSTACK -h $node -c $CONTROLLER_NODE -p $PUBLIC_INTERFACE -f $FLAT_INTERFACE"
        $DEVSTACK -h $node -c $CONTROLLER_NODE -p $PUBLIC_INTERFACE -f $FLAT_INTERFACE
    done
    setup_openstack

    launch_vms
fi
