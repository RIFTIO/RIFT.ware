#!/bin/bash

# 
# (c) Copyright RIFT.io, 2013-2016, All Rights Reserved
#

# This script create a basic web repo for a given branch name and version number.
# It handles the directory creation, html header/footer setup, permissions, and an initial createrepo.
#
# !!! needs to be run with a proper root@boson ssh config !!! -put sanity checks in for this
#

# arguments
NEWREPO=$1
VER=${2:-'4.1'}

# config
USER="root"
HOST="boson"
REPO_BASE="/home1/autobot/www/mirrors/releases/riftware/${VER}/20/x86_64"
REPO_PATH_NEW=${REPO_BASE}/${NEWREPO}/
# this is where it will get the templates like .htacces, header.html, etc.
TEMPLATE_DIR="/home1/autobot/www/mirrors/releases/riftware/4.0/20/x86_64/release/"

WEB_URL="http://repo.riftio.com/releases/riftware/${VER}/20/x86_64/${NEWREPO}/"

# colors
black='\e[0;30m'        # ${black}
blue='\e[0;34m'         # ${blue}
green='\e[0;32m'        # ${green}
cyan='\e[0;36m'         # ${cyan}
red='\e[0;31m'          # ${red}
purple='\e[0;35m'       # ${purple}
brown='\e[0;33m'        # ${brown}
lightgray='\e[0;37m'    # ${lightgray}
darkgray='\e[1;30m'     # ${darkgray}
lightblue='\e[1;34m'    # ${lightblue}
lightgreen='\e[1;32m'   # ${lightgreen}
lightcyan='\e[1;36m'    # ${lightcyan}
lightred='\e[1;31m'     # ${lightred}
lightpurple='\e[1;35m'  # ${lightpurple}
yellow='\e[1;33m'       # ${yellow}
white='\e[1;37m'        # ${white}
nc='\e[0m'              # ${nc} (no color - disables previous color selection)

# functions
function ssh_cmd {
	echo -e "${yellow}=== running: ssh ${USER}@${HOST} "$@" ${nc}"

	ssh ${USER}@${HOST} "$@"
	#ret=`ssh ${USER}@${HOST} "$@"`
	#echo $ret

       	if [[ "$?" -gt 0 ]]; then
		echo -e "${red} ret=$? ${nc}"
		#echo -e "${red}Command Failed, cowardly NOT_RIGHT_NOW quitting.${nc}"
		#exit 1;
	else
		echo -e "${green} ret=$? ${nc}"
	fi
}

function usage {
	echo -e "-----------------------------------------------------------------------------------------------------------------"
	echo -e "${purple}"
	echo -e "This script create a basic web repo for a given branch name and version number."
	echo -e "It handles the directory creation, html header/footer setup, permissions, and an initial createrepo. "
	echo -e "${yellow} "
	echo -e "Usage: ./create-branch-repo <BRANCH> <VERSION>		ex. ./create-branch-repo coreha 4.1"
	echo -e "${nc}"
	echo -e "-----------------------------------------------------------------------------------------------------------------"
}

# sanity
if [[ "${NEWREPO}" == '' ]]; then
	echo -e "${red}You must pass the newrepo as arg1! ${nc}"
	usage
	exit 1
fi

###############################################################################################################
# MAIN
###############################################################################################################

# check
ssh_cmd ls -all ${REPO_BASE}

# create new repo path
ssh_cmd mkdir ${REPO_PATH_NEW}

# copy .htacces to enable fancy index
ssh_cmd cp -vf ${TEMPLATE_DIR}/.htaccess ${REPO_PATH_NEW}/

# make icon dir and copy them
ssh_cmd mkdir ${REPO_PATH_NEW}/icons/
ssh_cmd cp -vf ${TEMPLATE_DIR}/icons/* ${REPO_PATH_NEW}/icons/

# copy header and footer .html
ssh_cmd cp -vf ${TEMPLATE_DIR}/header_template.html ${REPO_PATH_NEW}/header.html
ssh_cmd cp -vf ${TEMPLATE_DIR}/footer_template.html ${REPO_PATH_NEW}/footer.html

# customize header.html
# replace REPO_NAME with ${NEWREPO}
# replace VERSION with ${VER}
ssh_cmd "sed -i 's/REPO_NAME/${NEWREPO}/g' ${REPO_PATH_NEW}/header.html"
ssh_cmd "sed -i 's/VERSION/${VER}/g' ${REPO_PATH_NEW}/header.html"

# run initial createrepo
ssh_cmd createrepo ${REPO_PATH_NEW}

# fix permissions
ssh_cmd chown -R jenkins.jenkins ${REPO_PATH_NEW}

# check
ssh_cmd ls -all ${REPO_PATH_NEW}

# create .repo file on web
ssh_cmd cp -vf /home1/autobot/www/mirrors/releases/repos/_template.repo /home1/autobot/www/mirrors/releases/repos/${NEWREPO}.repo
# and customize
ssh_cmd "sed -i 's/BRANCHNAME/${NEWREPO}/g' 	/home1/autobot/www/mirrors/releases/repos/${NEWREPO}.repo"
ssh_cmd "sed -i 's/VERSION/${VER}/g' 		/home1/autobot/www/mirrors/releases/repos/${NEWREPO}.repo"



echo -e "${purple}"
echo -e "==========================================================================================================================="
echo -e " Done. Your new repo should be available online @ ${WEB_URL} "
echo -e " "
echo -e " You can install it into a VM with: curl -o /etc/yum.repos.d/riftware-${VER}-${NEWREPO}.repo http://repo.riftio.com/releases/repos/${NEWREPO}.repo "
echo -e " "
echo -e "==========================================================================================================================="
echo -e "${nc}"

#echo " "
